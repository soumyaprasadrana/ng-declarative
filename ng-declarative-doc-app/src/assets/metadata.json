{
    "UI": [
        {
            "tag": "alert",
            "type": "UI",
            "description": "Displays alert messages.",
            "attributes": [
                {
                    "name": "font-size",
                    "description": "Sets the font size of the alert text.",
                    "required": false,
                    "mappedInputAttribute": "fontSize",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert font-size=\"medium\" id=\"exampleAlert\"></alert>"
                },
                {
                    "name": "text-color",
                    "description": "Sets the color of the alert text.",
                    "required": false,
                    "mappedInputAttribute": "color",
                    "type": "string",
                    "example": "<alert text-color=\"#3498db\" id=\"exampleAlert\"></alert>"
                },
                {
                    "name": "font-weight",
                    "description": "Sets the font weight of the alert text.",
                    "required": false,
                    "mappedInputAttribute": "fontWeight",
                    "type": "string",
                    "allowedValues": "thin | extra-light | light | normal | medium | semi-bold | bold | extra-bold | heavy",
                    "example": "<alert font-weight=\"bold\" id=\"exampleAlert\"></alert>"
                },
                {
                    "name": "text",
                    "description": "Specifies the text content to be displayed in the alert.",
                    "required": true,
                    "mappedInputAttribute": "text",
                    "type": "string",
                    "example": "<alert text=\"Alert message here!\" id=\"exampleAlert\"></alert>"
                },
                {
                    "name": "type",
                    "description": "Specifies the type or style of the alert.",
                    "required": true,
                    "mappedInputAttribute": "type",
                    "type": "string",
                    "allowedValues": "success | info | warning | danger | primary | secondary | light | dark",
                    "example": "<alert type=\"info\" id=\"exampleAlert\"></alert>"
                },
                {
                    "name": "can-be-closed",
                    "description": "Determines whether the alert can be closed or dismissed.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "dismiss",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<alert can-be-closed=\"true\" id=\"exampleAlert\"></alert>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<alert background=\"none\" id=\"xhdy78\"></alert>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<alert background-color=\"#000\" id=\"xhdy78\"></alert>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<alert overflow=\"hidden\" id=\"xhdy78\"></alert>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<alertdisplay-condition=\"true\" id=\"xhdy78\"></alert>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<alert background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></alert>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<alert background-position=\"center\" id=\"xhdy78\"></alert>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<alert background-size=\"cover\" id=\"xhdy78\"></alert>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<alert background-repeat=\"no-repeat\" id=\"xhdy78\"></alert>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert border=\"medium\" id=\"sdj32\"></alert>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert border-start=\"small\" id=\"bgt54\"></alert>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert border-end=\"thick\" id=\"rty76\"></alert>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert border-top=\"large\" id=\"zxc32\"></alert>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert border-bottom=\"medium\" id=\"nhy87\"></alert>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<alert border-color=\"#333\" id=\"plm98\"></alert>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert padding=\"medium\" id=\"jkl23\"></alert>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert padding-start=\"thick\" id=\"qwe76\"></alert>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert padding-top=\"large\" id=\"mnb45\"></alert>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert padding-end=\"medium\" id=\"mki98\"></alert>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert padding-bottom=\"compact\" id=\"yhn87\"></alert>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert margin=\"medium\" id=\"vfr54\"></alert>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert margin-start=\"slim\" id=\"azx32\"></alert>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert margin-top=\"slim\" id=\"azx32\"></alert>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert margin-end=\"thicker\" id=\"qwe98\"></alert>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<alert margin-bottom=\"medium\" id=\"poi76\"></alert>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<alert css-class=\"my-custom-class\" id=\"dfg43\"></alert>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<alert height=\"medium\" id=\"sj889\"></alert>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<alert width=\"compact\" id=\"whd87\"></alert>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<alert transition=\"fade\" id=\"rfh45\"></alert>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<alert transition-duration=\"define-500ms\" id=\"tyu76\"></alert>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<alert on-click=\"handleClick\" id=\"jkv54\"></alert>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<alert on-click-args=\"['event']\" id=\"mnv32\"></alert>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<alert hidden=\"true\" id=\"plk98\"></alert>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<alert hidden=\"true\" id=\"plk98\"></alert>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<alert hidden=\"true\" id=\"plk98\"></alert>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<alert tootip=\"abc\" id=\"plk98\"></alert>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<alert tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></alert>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<alert tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></alert>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<alert hidden=\"true\" id=\"plk98\"></alert>"
                }
            ],
            "allowedChildren": null,
            "declarativeComponentTag": "ng-declarative-alert"
        },
        {
            "tag": "button",
            "type": "UI",
            "description": "Represents a clickable button.",
            "attributes": [
                {
                    "name": "theme",
                    "required": false,
                    "mappedInputAttribute": "theme",
                    "allwedValues": "'primary | secondary | success | danger | warning | info | light | dark | link | outline-primary | outline-secondary | outline-success | outline-danger | outline-warning | outline-info | outline-light | outline-dark'",
                    "type": "string"
                },
                {
                    "name": "type",
                    "required": false,
                    "mappedInputAttribute": "type",
                    "defaultValue": "submit",
                    "type": "string"
                },
                {
                    "name": "label",
                    "requiredIfAttributeNotPresent": "icon",
                    "mappedInputAttribute": "label",
                    "type": "string",
                    "required": "true"
                },
                {
                    "name": "route",
                    "required": false,
                    "mappedInputAttribute": "route",
                    "type": "string"
                },
                {
                    "name": "icon",
                    "required": "true",
                    "requiredIfAttributeNotPresent": "label",
                    "mappedInputAttribute": "iconClass",
                    "type": "string"
                },
                {
                    "name": "on-click-event",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<button background=\"none\" id=\"xhdy78\"></button>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<button background-color=\"#000\" id=\"xhdy78\"></button>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<button overflow=\"hidden\" id=\"xhdy78\"></button>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<buttondisplay-condition=\"true\" id=\"xhdy78\"></button>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<button background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></button>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<button background-position=\"center\" id=\"xhdy78\"></button>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<button background-size=\"cover\" id=\"xhdy78\"></button>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<button background-repeat=\"no-repeat\" id=\"xhdy78\"></button>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button border=\"medium\" id=\"sdj32\"></button>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button border-start=\"small\" id=\"bgt54\"></button>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button border-end=\"thick\" id=\"rty76\"></button>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button border-top=\"large\" id=\"zxc32\"></button>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button border-bottom=\"medium\" id=\"nhy87\"></button>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<button border-color=\"#333\" id=\"plm98\"></button>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button padding=\"medium\" id=\"jkl23\"></button>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button padding-start=\"thick\" id=\"qwe76\"></button>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button padding-top=\"large\" id=\"mnb45\"></button>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button padding-end=\"medium\" id=\"mki98\"></button>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button padding-bottom=\"compact\" id=\"yhn87\"></button>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button margin=\"medium\" id=\"vfr54\"></button>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button margin-start=\"slim\" id=\"azx32\"></button>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button margin-top=\"slim\" id=\"azx32\"></button>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button margin-end=\"thicker\" id=\"qwe98\"></button>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<button margin-bottom=\"medium\" id=\"poi76\"></button>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<button css-class=\"my-custom-class\" id=\"dfg43\"></button>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<button height=\"medium\" id=\"sj889\"></button>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<button width=\"compact\" id=\"whd87\"></button>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<button transition=\"fade\" id=\"rfh45\"></button>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<button transition-duration=\"define-500ms\" id=\"tyu76\"></button>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<button on-click=\"handleClick\" id=\"jkv54\"></button>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<button on-click-args=\"['event']\" id=\"mnv32\"></button>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<button hidden=\"true\" id=\"plk98\"></button>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<button hidden=\"true\" id=\"plk98\"></button>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<button hidden=\"true\" id=\"plk98\"></button>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<button tootip=\"abc\" id=\"plk98\"></button>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<button tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></button>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<button tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></button>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<button hidden=\"true\" id=\"plk98\"></button>"
                }
            ],
            "allowedChildren": null,
            "declarativeComponentTag": "ng-declarative-button"
        }
    ],
    "ROOT": [
        {
            "tag": "base",
            "type": "ROOT",
            "description": "Base component component.",
            "attributes": [
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<base background=\"none\" id=\"xhdy78\"></base>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<base background-color=\"#000\" id=\"xhdy78\"></base>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<base overflow=\"hidden\" id=\"xhdy78\"></base>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<basedisplay-condition=\"true\" id=\"xhdy78\"></base>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<base background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></base>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<base background-position=\"center\" id=\"xhdy78\"></base>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<base background-size=\"cover\" id=\"xhdy78\"></base>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<base background-repeat=\"no-repeat\" id=\"xhdy78\"></base>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base border=\"medium\" id=\"sdj32\"></base>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base border-start=\"small\" id=\"bgt54\"></base>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base border-end=\"thick\" id=\"rty76\"></base>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base border-top=\"large\" id=\"zxc32\"></base>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base border-bottom=\"medium\" id=\"nhy87\"></base>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<base border-color=\"#333\" id=\"plm98\"></base>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base padding=\"medium\" id=\"jkl23\"></base>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base padding-start=\"thick\" id=\"qwe76\"></base>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base padding-top=\"large\" id=\"mnb45\"></base>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base padding-end=\"medium\" id=\"mki98\"></base>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base padding-bottom=\"compact\" id=\"yhn87\"></base>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base margin=\"medium\" id=\"vfr54\"></base>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base margin-start=\"slim\" id=\"azx32\"></base>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base margin-top=\"slim\" id=\"azx32\"></base>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base margin-end=\"thicker\" id=\"qwe98\"></base>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<base margin-bottom=\"medium\" id=\"poi76\"></base>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<base css-class=\"my-custom-class\" id=\"dfg43\"></base>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<base height=\"medium\" id=\"sj889\"></base>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<base width=\"compact\" id=\"whd87\"></base>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<base transition=\"fade\" id=\"rfh45\"></base>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<base transition-duration=\"define-500ms\" id=\"tyu76\"></base>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<base on-click=\"handleClick\" id=\"jkv54\"></base>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<base on-click-args=\"['event']\" id=\"mnv32\"></base>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<base hidden=\"true\" id=\"plk98\"></base>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<base hidden=\"true\" id=\"plk98\"></base>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<base hidden=\"true\" id=\"plk98\"></base>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<base tootip=\"abc\" id=\"plk98\"></base>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<base tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></base>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<base tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></base>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<base hidden=\"true\" id=\"plk98\"></base>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "declarativeComponentTag": "ng-declarative-base"
        },
        {
            "tag": "ng-declarative-app",
            "type": "ROOT",
            "description": "The root component for the ng-declarative application.",
            "attributes": [
                {
                    "name": "base-href",
                    "required": false,
                    "mappedInputAttribute": "baseHref",
                    "type": "string"
                },
                {
                    "name": "name",
                    "required": false,
                    "mappedInputAttribute": "name",
                    "type": "string"
                },
                {
                    "name": "controller",
                    "required": false,
                    "mappedInputAttribute": "controller",
                    "type": "string"
                }
            ],
            "allowedChildren": [
                "route",
                "signal",
                "dataset",
                "navbar"
            ],
            "declarativeComponentTag": "ng-declarative-app"
        },
        {
            "tag": "route",
            "type": "ROOT",
            "description": "Manages navigation routes and it's UI presentation within the application.",
            "attributes": [
                {
                    "name": "title",
                    "required": false,
                    "mappedInputAttribute": "title",
                    "type": "string"
                },
                {
                    "name": "uri",
                    "required": false,
                    "mappedInputAttribute": "uri",
                    "type": "string"
                },
                {
                    "name": "controller",
                    "required": false,
                    "mappedInputAttribute": "controller",
                    "type": "string"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "declarativeComponentTag": "ng-declarative-route"
        }
    ],
    "LAYOUT": [
        {
            "tag": "block",
            "type": "LAYOUT",
            "description": "A block is a configurable flex box.",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Specifies the layout direction of the block.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block direction=\"row\">...</block>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the block should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<block manage-children=\"true\">...</block>"
                },
                {
                    "name": "children-sizes",
                    "description": "Specifies the sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<block children-sizes=\"50% 50%\">...</block>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Specifies the flex sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<block children-flex-sizes=\"1 2\">...</block>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the block along the cross-axis.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<block align-items=\"center\">...</block>"
                },
                {
                    "name": "justify-contents",
                    "description": "Aligns the content of the block along the main-axis.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<block justify-contents=\"space-between\">...</block>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether to skip applying flex classes to the block.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<block skip-flex=\"true\">...</block>"
                },
                {
                    "name": "responsive",
                    "description": "Determines whether a block is responsive to device viewport.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "responsive",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<block responsive=\"true\">...</block>"
                },
                {
                    "name": "viewport-sm",
                    "description": "Set the direction of flex box for small breakpoint viewport.",
                    "required": false,
                    "mappedInputAttribute": "viewportSM",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block viewport-sm=\"column\">...</block>"
                },
                {
                    "name": "viewport-md",
                    "description": "Set the direction of flex box for medium breakpoint viewport.",
                    "required": false,
                    "mappedInputAttribute": "viewportMD",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block viewport-md=\"column\">...</block>"
                },
                {
                    "name": "viewport-lg",
                    "description": "Set the direction of flex box for lg breakpoint viewport.",
                    "required": false,
                    "mappedInputAttribute": "viewportLG",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block viewport-lg=\"column\">...</block>"
                },
                {
                    "name": "viewport-xl",
                    "description": "Set the direction of flex box for xl breakpoint viewport.",
                    "required": false,
                    "mappedInputAttribute": "viewportXL",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block viewport-xl=\"column\">...</block>"
                },
                {
                    "name": "viewport-xxl",
                    "description": "Set the direction of flex box for xxl breakpoint viewport.",
                    "required": false,
                    "mappedInputAttribute": "viewportXXL",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block viewport-xxl=\"column\">...</block>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<block background=\"none\" id=\"xhdy78\"></block>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<block background-color=\"#000\" id=\"xhdy78\"></block>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<block overflow=\"hidden\" id=\"xhdy78\"></block>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<blockdisplay-condition=\"true\" id=\"xhdy78\"></block>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<block background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></block>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<block background-position=\"center\" id=\"xhdy78\"></block>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<block background-size=\"cover\" id=\"xhdy78\"></block>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<block background-repeat=\"no-repeat\" id=\"xhdy78\"></block>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block border=\"medium\" id=\"sdj32\"></block>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block border-start=\"small\" id=\"bgt54\"></block>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block border-end=\"thick\" id=\"rty76\"></block>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block border-top=\"large\" id=\"zxc32\"></block>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block border-bottom=\"medium\" id=\"nhy87\"></block>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<block border-color=\"#333\" id=\"plm98\"></block>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block padding=\"medium\" id=\"jkl23\"></block>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block padding-start=\"thick\" id=\"qwe76\"></block>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block padding-top=\"large\" id=\"mnb45\"></block>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block padding-end=\"medium\" id=\"mki98\"></block>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block padding-bottom=\"compact\" id=\"yhn87\"></block>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block margin=\"medium\" id=\"vfr54\"></block>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block margin-start=\"slim\" id=\"azx32\"></block>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block margin-top=\"slim\" id=\"azx32\"></block>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block margin-end=\"thicker\" id=\"qwe98\"></block>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<block margin-bottom=\"medium\" id=\"poi76\"></block>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<block css-class=\"my-custom-class\" id=\"dfg43\"></block>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<block height=\"medium\" id=\"sj889\"></block>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<block width=\"compact\" id=\"whd87\"></block>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<block transition=\"fade\" id=\"rfh45\"></block>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<block transition-duration=\"define-500ms\" id=\"tyu76\"></block>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<block on-click=\"handleClick\" id=\"jkv54\"></block>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<block on-click-args=\"['event']\" id=\"mnv32\"></block>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<block hidden=\"true\" id=\"plk98\"></block>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<block hidden=\"true\" id=\"plk98\"></block>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<block hidden=\"true\" id=\"plk98\"></block>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<block tootip=\"abc\" id=\"plk98\"></block>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<block tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></block>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<block tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></block>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<block hidden=\"true\" id=\"plk98\"></block>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "column",
            "type": "LAYOUT",
            "description": "A bootstrap configurable column.",
            "attributes": [
                {
                    "name": "size",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "colSize",
                    "type": "string",
                    "example": "<column size=\"2\"></column>"
                },
                {
                    "name": "order",
                    "description": "Set the order for a row",
                    "required": false,
                    "mappedInputAttribute": "colOrder",
                    "type": "string",
                    "example": "<col order=\"2\"></col>"
                },
                {
                    "name": "viewport-sm",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "breakpointSmall",
                    "type": "string",
                    "example": "<row viewport-sm=\"2\"></row>"
                },
                {
                    "name": "viewport-md",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "breakpointMedium",
                    "type": "string",
                    "example": "<row viewport=\"2\"></row>"
                },
                {
                    "name": "viewport-xs",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "breakpointXtraSmall",
                    "type": "string",
                    "example": "<row viewport=\"2\"></row>"
                },
                {
                    "name": "viewport-lg",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "breakpointLarge",
                    "type": "string",
                    "example": "<row viewport=\"2\"></row>"
                },
                {
                    "name": "viewport-xl",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "breakpointXtraLarge",
                    "type": "string",
                    "example": "<row viewport=\"2\"></row>"
                },
                {
                    "name": "align-self",
                    "description": "Align  Self Items in a grid",
                    "required": false,
                    "mappedInputAttribute": "alignSelf",
                    "type": "string",
                    "allowedValues": "start | center | end",
                    "example": "<container align-self=\"start\"></container>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<column background=\"none\" id=\"xhdy78\"></column>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<column background-color=\"#000\" id=\"xhdy78\"></column>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<column overflow=\"hidden\" id=\"xhdy78\"></column>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<columndisplay-condition=\"true\" id=\"xhdy78\"></column>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<column background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></column>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<column background-position=\"center\" id=\"xhdy78\"></column>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<column background-size=\"cover\" id=\"xhdy78\"></column>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<column background-repeat=\"no-repeat\" id=\"xhdy78\"></column>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column border=\"medium\" id=\"sdj32\"></column>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column border-start=\"small\" id=\"bgt54\"></column>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column border-end=\"thick\" id=\"rty76\"></column>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column border-top=\"large\" id=\"zxc32\"></column>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column border-bottom=\"medium\" id=\"nhy87\"></column>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<column border-color=\"#333\" id=\"plm98\"></column>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column padding=\"medium\" id=\"jkl23\"></column>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column padding-start=\"thick\" id=\"qwe76\"></column>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column padding-top=\"large\" id=\"mnb45\"></column>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column padding-end=\"medium\" id=\"mki98\"></column>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column padding-bottom=\"compact\" id=\"yhn87\"></column>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column margin=\"medium\" id=\"vfr54\"></column>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column margin-start=\"slim\" id=\"azx32\"></column>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column margin-top=\"slim\" id=\"azx32\"></column>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column margin-end=\"thicker\" id=\"qwe98\"></column>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<column margin-bottom=\"medium\" id=\"poi76\"></column>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<column css-class=\"my-custom-class\" id=\"dfg43\"></column>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<column height=\"medium\" id=\"sj889\"></column>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<column width=\"compact\" id=\"whd87\"></column>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<column transition=\"fade\" id=\"rfh45\"></column>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<column transition-duration=\"define-500ms\" id=\"tyu76\"></column>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<column on-click=\"handleClick\" id=\"jkv54\"></column>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<column on-click-args=\"['event']\" id=\"mnv32\"></column>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<column hidden=\"true\" id=\"plk98\"></column>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<column hidden=\"true\" id=\"plk98\"></column>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<column hidden=\"true\" id=\"plk98\"></column>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<column tootip=\"abc\" id=\"plk98\"></column>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<column tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></column>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<column tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></column>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<column hidden=\"true\" id=\"plk98\"></column>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "declarativeComponentTag": "ng-declarative-col"
        },
        {
            "tag": "container",
            "type": "LAYOUT",
            "description": "A bootstrap configurable container.",
            "attributes": [
                {
                    "name": "size",
                    "description": "Sets the size of a container",
                    "required": false,
                    "mappedInputAttribute": "size",
                    "type": "string",
                    "allowedValues": "small | medium | large | xtralarge | xtraxtralarge | full",
                    "example": "<container size=\"large\"></container>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<container background=\"none\" id=\"xhdy78\"></container>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<container background-color=\"#000\" id=\"xhdy78\"></container>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<container overflow=\"hidden\" id=\"xhdy78\"></container>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<containerdisplay-condition=\"true\" id=\"xhdy78\"></container>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<container background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></container>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<container background-position=\"center\" id=\"xhdy78\"></container>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<container background-size=\"cover\" id=\"xhdy78\"></container>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<container background-repeat=\"no-repeat\" id=\"xhdy78\"></container>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container border=\"medium\" id=\"sdj32\"></container>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container border-start=\"small\" id=\"bgt54\"></container>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container border-end=\"thick\" id=\"rty76\"></container>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container border-top=\"large\" id=\"zxc32\"></container>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container border-bottom=\"medium\" id=\"nhy87\"></container>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<container border-color=\"#333\" id=\"plm98\"></container>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container padding=\"medium\" id=\"jkl23\"></container>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container padding-start=\"thick\" id=\"qwe76\"></container>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container padding-top=\"large\" id=\"mnb45\"></container>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container padding-end=\"medium\" id=\"mki98\"></container>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container padding-bottom=\"compact\" id=\"yhn87\"></container>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container margin=\"medium\" id=\"vfr54\"></container>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container margin-start=\"slim\" id=\"azx32\"></container>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container margin-top=\"slim\" id=\"azx32\"></container>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container margin-end=\"thicker\" id=\"qwe98\"></container>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<container margin-bottom=\"medium\" id=\"poi76\"></container>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<container css-class=\"my-custom-class\" id=\"dfg43\"></container>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<container height=\"medium\" id=\"sj889\"></container>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<container width=\"compact\" id=\"whd87\"></container>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<container transition=\"fade\" id=\"rfh45\"></container>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<container transition-duration=\"define-500ms\" id=\"tyu76\"></container>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<container on-click=\"handleClick\" id=\"jkv54\"></container>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<container on-click-args=\"['event']\" id=\"mnv32\"></container>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<container hidden=\"true\" id=\"plk98\"></container>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<container hidden=\"true\" id=\"plk98\"></container>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<container hidden=\"true\" id=\"plk98\"></container>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<container tootip=\"abc\" id=\"plk98\"></container>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<container tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></container>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<container tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></container>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<container hidden=\"true\" id=\"plk98\"></container>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "declarativeComponentTag": "ng-declarative-container"
        },
        {
            "tag": "row",
            "type": "LAYOUT",
            "description": "A bootstrap row.",
            "attributes": [
                {
                    "name": "row-cols",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "rowCols",
                    "type": "string",
                    "example": "<row row-cols=\"2\"></row>"
                },
                {
                    "name": "order",
                    "description": "Set the order for a row",
                    "required": false,
                    "mappedInputAttribute": "rowOrder",
                    "type": "string",
                    "example": "<row order=\"2\"></row>"
                },
                {
                    "name": "row-cols-sm",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "rowColsBreakpointSmall",
                    "type": "string",
                    "example": "<row row-cols=\"2\"></row>"
                },
                {
                    "name": "row-cols-md",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "rowColsBreakpointSmall",
                    "type": "string",
                    "example": "<row row-cols=\"2\"></row>"
                },
                {
                    "name": "row-cols-xs",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "rowColsBreakpointXtraSmall",
                    "type": "string",
                    "example": "<row row-cols=\"2\"></row>"
                },
                {
                    "name": "row-cols-lg",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "rowColsBreakpointLarge",
                    "type": "string",
                    "example": "<row row-cols=\"2\"></row>"
                },
                {
                    "name": "row-cols-xl",
                    "description": "Associates the row cols grid feature to he application",
                    "required": false,
                    "mappedInputAttribute": "rowColsBreakpointXtraLarge",
                    "type": "string",
                    "example": "<row row-cols=\"2\"></row>"
                },
                {
                    "name": "align-items",
                    "description": "Align Items in a grid",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | center | end",
                    "example": "<container align-items=\"start\"></container>"
                },
                {
                    "name": "justify-contents",
                    "description": "Justify contents in a grid",
                    "required": false,
                    "mappedInputAttribute": "justifyContents",
                    "type": "string",
                    "allowedValues": "start | center | end | around | between | evenly",
                    "example": "<container justify-contents=\"start\"></container>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<row background=\"none\" id=\"xhdy78\"></row>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<row background-color=\"#000\" id=\"xhdy78\"></row>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<row overflow=\"hidden\" id=\"xhdy78\"></row>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<rowdisplay-condition=\"true\" id=\"xhdy78\"></row>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<row background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></row>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<row background-position=\"center\" id=\"xhdy78\"></row>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<row background-size=\"cover\" id=\"xhdy78\"></row>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<row background-repeat=\"no-repeat\" id=\"xhdy78\"></row>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row border=\"medium\" id=\"sdj32\"></row>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row border-start=\"small\" id=\"bgt54\"></row>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row border-end=\"thick\" id=\"rty76\"></row>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row border-top=\"large\" id=\"zxc32\"></row>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row border-bottom=\"medium\" id=\"nhy87\"></row>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<row border-color=\"#333\" id=\"plm98\"></row>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row padding=\"medium\" id=\"jkl23\"></row>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row padding-start=\"thick\" id=\"qwe76\"></row>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row padding-top=\"large\" id=\"mnb45\"></row>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row padding-end=\"medium\" id=\"mki98\"></row>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row padding-bottom=\"compact\" id=\"yhn87\"></row>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row margin=\"medium\" id=\"vfr54\"></row>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row margin-start=\"slim\" id=\"azx32\"></row>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row margin-top=\"slim\" id=\"azx32\"></row>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row margin-end=\"thicker\" id=\"qwe98\"></row>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<row margin-bottom=\"medium\" id=\"poi76\"></row>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<row css-class=\"my-custom-class\" id=\"dfg43\"></row>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<row height=\"medium\" id=\"sj889\"></row>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<row width=\"compact\" id=\"whd87\"></row>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<row transition=\"fade\" id=\"rfh45\"></row>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<row transition-duration=\"define-500ms\" id=\"tyu76\"></row>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<row on-click=\"handleClick\" id=\"jkv54\"></row>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<row on-click-args=\"['event']\" id=\"mnv32\"></row>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<row hidden=\"true\" id=\"plk98\"></row>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<row hidden=\"true\" id=\"plk98\"></row>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<row hidden=\"true\" id=\"plk98\"></row>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<row tootip=\"abc\" id=\"plk98\"></row>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<row tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></row>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<row tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></row>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<row hidden=\"true\" id=\"plk98\"></row>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "declarativeComponentTag": "ng-declarative-row"
        }
    ],
    "WIDGET": [
        {
            "tag": "card",
            "type": "WIDGET",
            "description": "Bootstrap card component.",
            "attributes": [
                {
                    "name": "start-image",
                    "description": "Associates an image at the top of the card.",
                    "required": false,
                    "mappedInputAttribute": "imageTop",
                    "type": "string",
                    "example": "<card start-image=\"/path/to/image.jpg\"></card>"
                },
                {
                    "name": "start-image-css",
                    "description": "Associates a css class to image at the top of the card.",
                    "required": false,
                    "mappedInputAttribute": "imageTopCss",
                    "type": "string",
                    "example": "<card start-image-css=\"start-img-css-class\"></card>"
                },
                {
                    "name": "end-image-css",
                    "description": "Associates a css class to image at the bottom of the card.",
                    "required": false,
                    "mappedInputAttribute": "imageBottomCss",
                    "type": "string",
                    "example": "<card start-image-css=\"start-img-css-class\"></card>"
                },
                {
                    "name": "end-image",
                    "description": "Associates an image at the bottom of the card.",
                    "required": false,
                    "mappedInputAttribute": "imageBottom",
                    "type": "string",
                    "example": "<card end-image=\"/path/to/image.jpg\"></card>"
                },
                {
                    "name": "theme",
                    "description": "Sets the theme for the card.",
                    "required": false,
                    "mappedInputAttribute": "theme",
                    "type": "string",
                    "example": "<card theme=\"primary\"></card>"
                },
                {
                    "name": "card-title",
                    "description": "Sets the title of the card.",
                    "required": false,
                    "mappedInputAttribute": "cardTitle",
                    "type": "string",
                    "example": "<card card-title=\"Title\"></card>"
                },
                {
                    "name": "card-title-class",
                    "description": "Sets the css class to the title of the card.",
                    "required": false,
                    "mappedInputAttribute": "cardTitleCssClass",
                    "type": "string",
                    "example": "<card card-title-class=\"app-card-title\"></card>"
                },
                {
                    "name": "card-subtitle",
                    "description": "Sets the sub-title of the card.",
                    "required": false,
                    "mappedInputAttribute": "cardSubTitle",
                    "type": "string",
                    "example": "<card card-subtitle=\"Sub Title\"></card>"
                },
                {
                    "name": "card-subtitle-class",
                    "description": "Sets the css class to the sub-title of the card.",
                    "required": false,
                    "mappedInputAttribute": "cardSubTitleCssClass",
                    "type": "string",
                    "example": "<card card-title-class=\"app-card-title\"></card>"
                },
                {
                    "name": "image-overlay",
                    "description": "Specifies the property if the start image will be overlayed on the card.",
                    "required": false,
                    "mappedInputAttribute": "imageOverlay",
                    "type": "boolean",
                    "example": "<card image-overlay=\"true\"></card>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<card background=\"none\" id=\"xhdy78\"></card>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<card background-color=\"#000\" id=\"xhdy78\"></card>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<card overflow=\"hidden\" id=\"xhdy78\"></card>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<carddisplay-condition=\"true\" id=\"xhdy78\"></card>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<card background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></card>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<card background-position=\"center\" id=\"xhdy78\"></card>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<card background-size=\"cover\" id=\"xhdy78\"></card>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<card background-repeat=\"no-repeat\" id=\"xhdy78\"></card>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card border=\"medium\" id=\"sdj32\"></card>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card border-start=\"small\" id=\"bgt54\"></card>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card border-end=\"thick\" id=\"rty76\"></card>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card border-top=\"large\" id=\"zxc32\"></card>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card border-bottom=\"medium\" id=\"nhy87\"></card>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<card border-color=\"#333\" id=\"plm98\"></card>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card padding=\"medium\" id=\"jkl23\"></card>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card padding-start=\"thick\" id=\"qwe76\"></card>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card padding-top=\"large\" id=\"mnb45\"></card>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card padding-end=\"medium\" id=\"mki98\"></card>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card padding-bottom=\"compact\" id=\"yhn87\"></card>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card margin=\"medium\" id=\"vfr54\"></card>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card margin-start=\"slim\" id=\"azx32\"></card>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card margin-top=\"slim\" id=\"azx32\"></card>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card margin-end=\"thicker\" id=\"qwe98\"></card>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card margin-bottom=\"medium\" id=\"poi76\"></card>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<card css-class=\"my-custom-class\" id=\"dfg43\"></card>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<card height=\"medium\" id=\"sj889\"></card>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<card width=\"compact\" id=\"whd87\"></card>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<card transition=\"fade\" id=\"rfh45\"></card>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<card transition-duration=\"define-500ms\" id=\"tyu76\"></card>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<card on-click=\"handleClick\" id=\"jkv54\"></card>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<card on-click-args=\"['event']\" id=\"mnv32\"></card>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<card hidden=\"true\" id=\"plk98\"></card>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<card hidden=\"true\" id=\"plk98\"></card>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<card hidden=\"true\" id=\"plk98\"></card>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<card tootip=\"abc\" id=\"plk98\"></card>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<card tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></card>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<card tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></card>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<card hidden=\"true\" id=\"plk98\"></card>"
                }
            ],
            "allowedChildren": [
                "card-header",
                "card-footer",
                "card-body"
            ],
            "declarativeComponentTag": "ng-declarative-card"
        },
        {
            "tag": "card-body",
            "type": "WIDGET",
            "parent": "card",
            "description": "Footer slot in a card component.",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Specifies the layout direction of the card-body.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<card-body direction=\"row\">...</card-body>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the card-body should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<card-body manage-children=\"true\">...</card-body>"
                },
                {
                    "name": "children-sizes",
                    "description": "Specifies the sizes of the card-body's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<card-body children-sizes=\"50% 50%\">...</card-body>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Specifies the flex sizes of the card-body's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<card-body children-flex-sizes=\"1 2\">...</card-body>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the card-body along the cross-axis.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<card-body align-items=\"center\">...</card-body>"
                },
                {
                    "name": "justify-contents",
                    "description": "Aligns the content of the card-body along the main-axis.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<card-body justify-contents=\"space-between\">...</card-body>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether to skip applying flex classes to the card-body.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<card-body skip-flex=\"true\">...</card-body>"
                },
                {
                    "name": "cardbody",
                    "description": "Associates the card component with an cardbody directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<card-body ></card-body>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "defaultValue": "display-contents",
                    "type": "string",
                    "example": "<card-body  css-class=\"my-custom-class\" id=\"dfg43\"></card-body>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<card-body background=\"none\" id=\"xhdy78\"></card-body>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<card-body background-color=\"#000\" id=\"xhdy78\"></card-body>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<card-body overflow=\"hidden\" id=\"xhdy78\"></card-body>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<card-bodydisplay-condition=\"true\" id=\"xhdy78\"></card-body>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<card-body background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></card-body>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<card-body background-position=\"center\" id=\"xhdy78\"></card-body>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<card-body background-size=\"cover\" id=\"xhdy78\"></card-body>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<card-body background-repeat=\"no-repeat\" id=\"xhdy78\"></card-body>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body border=\"medium\" id=\"sdj32\"></card-body>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body border-start=\"small\" id=\"bgt54\"></card-body>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body border-end=\"thick\" id=\"rty76\"></card-body>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body border-top=\"large\" id=\"zxc32\"></card-body>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body border-bottom=\"medium\" id=\"nhy87\"></card-body>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<card-body border-color=\"#333\" id=\"plm98\"></card-body>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body padding=\"medium\" id=\"jkl23\"></card-body>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body padding-start=\"thick\" id=\"qwe76\"></card-body>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body padding-top=\"large\" id=\"mnb45\"></card-body>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body padding-end=\"medium\" id=\"mki98\"></card-body>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body padding-bottom=\"compact\" id=\"yhn87\"></card-body>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body margin=\"medium\" id=\"vfr54\"></card-body>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body margin-start=\"slim\" id=\"azx32\"></card-body>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body margin-top=\"slim\" id=\"azx32\"></card-body>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body margin-end=\"thicker\" id=\"qwe98\"></card-body>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-body margin-bottom=\"medium\" id=\"poi76\"></card-body>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<card-body css-class=\"my-custom-class\" id=\"dfg43\"></card-body>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<card-body height=\"medium\" id=\"sj889\"></card-body>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<card-body width=\"compact\" id=\"whd87\"></card-body>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<card-body transition=\"fade\" id=\"rfh45\"></card-body>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<card-body transition-duration=\"define-500ms\" id=\"tyu76\"></card-body>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<card-body on-click=\"handleClick\" id=\"jkv54\"></card-body>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<card-body on-click-args=\"['event']\" id=\"mnv32\"></card-body>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<card-body hidden=\"true\" id=\"plk98\"></card-body>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<card-body hidden=\"true\" id=\"plk98\"></card-body>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<card-body hidden=\"true\" id=\"plk98\"></card-body>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<card-body tootip=\"abc\" id=\"plk98\"></card-body>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<card-body tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></card-body>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<card-body tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></card-body>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<card-body hidden=\"true\" id=\"plk98\"></card-body>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "allowedInParent": [
                "card"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "card-footer",
            "type": "WIDGET",
            "parent": "card",
            "description": "Footer slot in a card component.",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Specifies the layout direction of the card-footer.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<card-footer direction=\"row\">...</card-footer>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the card-footer should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<card-footer manage-children=\"true\">...</card-footer>"
                },
                {
                    "name": "children-sizes",
                    "description": "Specifies the sizes of the card-footer's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<card-footer children-sizes=\"50% 50%\">...</card-footer>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Specifies the flex sizes of the card-footer's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<card-footer children-flex-sizes=\"1 2\">...</card-footer>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the card-footer along the cross-axis.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<card-footer align-items=\"center\">...</card-footer>"
                },
                {
                    "name": "justify-contents",
                    "description": "Aligns the content of the card-footer along the main-axis.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<card-footer justify-contents=\"space-between\">...</card-footer>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether to skip applying flex classes to the card-footer.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<card-footer skip-flex=\"true\">...</card-footer>"
                },
                {
                    "name": "cardfooter",
                    "description": "Associates the card component with an cardfooter directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<card-footer ></card-footer>"
                },
                {
                    "name": "#cardFooter",
                    "description": "Associates the card-footer with an cardheader directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<card-footer ></card-footer>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "defaultValue": "display-contents",
                    "type": "string",
                    "example": "<card-footer  css-class=\"my-custom-class\" id=\"dfg43\"></card-footer>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<card-footer background=\"none\" id=\"xhdy78\"></card-footer>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<card-footer background-color=\"#000\" id=\"xhdy78\"></card-footer>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<card-footer overflow=\"hidden\" id=\"xhdy78\"></card-footer>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<card-footerdisplay-condition=\"true\" id=\"xhdy78\"></card-footer>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<card-footer background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></card-footer>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<card-footer background-position=\"center\" id=\"xhdy78\"></card-footer>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<card-footer background-size=\"cover\" id=\"xhdy78\"></card-footer>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<card-footer background-repeat=\"no-repeat\" id=\"xhdy78\"></card-footer>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer border=\"medium\" id=\"sdj32\"></card-footer>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer border-start=\"small\" id=\"bgt54\"></card-footer>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer border-end=\"thick\" id=\"rty76\"></card-footer>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer border-top=\"large\" id=\"zxc32\"></card-footer>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer border-bottom=\"medium\" id=\"nhy87\"></card-footer>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<card-footer border-color=\"#333\" id=\"plm98\"></card-footer>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer padding=\"medium\" id=\"jkl23\"></card-footer>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer padding-start=\"thick\" id=\"qwe76\"></card-footer>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer padding-top=\"large\" id=\"mnb45\"></card-footer>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer padding-end=\"medium\" id=\"mki98\"></card-footer>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer padding-bottom=\"compact\" id=\"yhn87\"></card-footer>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer margin=\"medium\" id=\"vfr54\"></card-footer>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer margin-start=\"slim\" id=\"azx32\"></card-footer>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer margin-top=\"slim\" id=\"azx32\"></card-footer>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer margin-end=\"thicker\" id=\"qwe98\"></card-footer>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-footer margin-bottom=\"medium\" id=\"poi76\"></card-footer>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<card-footer css-class=\"my-custom-class\" id=\"dfg43\"></card-footer>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<card-footer height=\"medium\" id=\"sj889\"></card-footer>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<card-footer width=\"compact\" id=\"whd87\"></card-footer>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<card-footer transition=\"fade\" id=\"rfh45\"></card-footer>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<card-footer transition-duration=\"define-500ms\" id=\"tyu76\"></card-footer>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<card-footer on-click=\"handleClick\" id=\"jkv54\"></card-footer>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<card-footer on-click-args=\"['event']\" id=\"mnv32\"></card-footer>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<card-footer hidden=\"true\" id=\"plk98\"></card-footer>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<card-footer hidden=\"true\" id=\"plk98\"></card-footer>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<card-footer hidden=\"true\" id=\"plk98\"></card-footer>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<card-footer tootip=\"abc\" id=\"plk98\"></card-footer>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<card-footer tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></card-footer>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<card-footer tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></card-footer>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<card-footer hidden=\"true\" id=\"plk98\"></card-footer>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "allowedInParent": [
                "card"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "card-header",
            "type": "WIDGET",
            "parent": "card",
            "description": "Header slot in a card component.",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Specifies the layout direction of the card-header.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<card-header direction=\"row\">...</card-header>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the card-header should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<card-header manage-children=\"true\">...</card-header>"
                },
                {
                    "name": "children-sizes",
                    "description": "Specifies the sizes of the card-header's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<card-header children-sizes=\"50% 50%\">...</card-header>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Specifies the flex sizes of the card-header's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<card-header children-flex-sizes=\"1 2\">...</card-header>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the card-header along the cross-axis.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<card-header align-items=\"center\">...</card-header>"
                },
                {
                    "name": "justify-contents",
                    "description": "Aligns the content of the card-header along the main-axis.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<card-header justify-contents=\"space-between\">...</card-header>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether to skip applying flex classes to the card-header.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<card-header skip-flex=\"true\">...</card-header>"
                },
                {
                    "name": "cardheader",
                    "description": "Associates the card-header with an cardheader directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<card-header ></card-header>"
                },
                {
                    "name": "#cardHeader",
                    "description": "Associates the card-header with an cardheader directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<card-header ></card-header>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "defaultValue": "display-contents",
                    "type": "string",
                    "example": "<card-header  css-class=\"my-custom-class\" id=\"dfg43\"></card-header>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<card-header background=\"none\" id=\"xhdy78\"></card-header>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<card-header background-color=\"#000\" id=\"xhdy78\"></card-header>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<card-header overflow=\"hidden\" id=\"xhdy78\"></card-header>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<card-headerdisplay-condition=\"true\" id=\"xhdy78\"></card-header>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<card-header background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></card-header>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<card-header background-position=\"center\" id=\"xhdy78\"></card-header>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<card-header background-size=\"cover\" id=\"xhdy78\"></card-header>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<card-header background-repeat=\"no-repeat\" id=\"xhdy78\"></card-header>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header border=\"medium\" id=\"sdj32\"></card-header>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header border-start=\"small\" id=\"bgt54\"></card-header>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header border-end=\"thick\" id=\"rty76\"></card-header>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header border-top=\"large\" id=\"zxc32\"></card-header>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header border-bottom=\"medium\" id=\"nhy87\"></card-header>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<card-header border-color=\"#333\" id=\"plm98\"></card-header>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header padding=\"medium\" id=\"jkl23\"></card-header>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header padding-start=\"thick\" id=\"qwe76\"></card-header>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header padding-top=\"large\" id=\"mnb45\"></card-header>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header padding-end=\"medium\" id=\"mki98\"></card-header>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header padding-bottom=\"compact\" id=\"yhn87\"></card-header>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header margin=\"medium\" id=\"vfr54\"></card-header>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header margin-start=\"slim\" id=\"azx32\"></card-header>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header margin-top=\"slim\" id=\"azx32\"></card-header>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header margin-end=\"thicker\" id=\"qwe98\"></card-header>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<card-header margin-bottom=\"medium\" id=\"poi76\"></card-header>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<card-header css-class=\"my-custom-class\" id=\"dfg43\"></card-header>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<card-header height=\"medium\" id=\"sj889\"></card-header>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<card-header width=\"compact\" id=\"whd87\"></card-header>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<card-header transition=\"fade\" id=\"rfh45\"></card-header>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<card-header transition-duration=\"define-500ms\" id=\"tyu76\"></card-header>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<card-header on-click=\"handleClick\" id=\"jkv54\"></card-header>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<card-header on-click-args=\"['event']\" id=\"mnv32\"></card-header>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<card-header hidden=\"true\" id=\"plk98\"></card-header>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<card-header hidden=\"true\" id=\"plk98\"></card-header>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<card-header hidden=\"true\" id=\"plk98\"></card-header>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<card-header tootip=\"abc\" id=\"plk98\"></card-header>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<card-header tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></card-header>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<card-header tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></card-header>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<card-header hidden=\"true\" id=\"plk98\"></card-header>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "allowedInParent": [
                "card"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "foldable-block",
            "type": "WIDGET",
            "description": "A collapsible block component.",
            "attributes": [
                {
                    "name": "width",
                    "description": "Sets the width of the foldable block.",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "defaultValue": "full",
                    "example": "<foldable-block width=\"medium\" id=\"exampleFoldableBlock\"></foldable-block>"
                },
                {
                    "name": "direction",
                    "description": "Sets the layout direction of the foldable block's children.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<foldable-block direction=\"column\" id=\"exampleFoldableBlock\"></foldable-block>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the foldable block should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<foldable-block manage-children=\"true\" id=\"exampleFoldableBlock\"></foldable-block>"
                },
                {
                    "name": "children-sizes",
                    "description": "Sets the sizes of the foldable block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<foldable-block children-sizes=\"50% 50%\" id=\"exampleFoldableBlock\"></foldable-block>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Sets the flex values of the foldable block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<foldable-block children-flex-sizes=\"1 2\" id=\"exampleFoldableBlock\"></foldable-block>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the foldable block.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<foldable-block align-items=\"center\" id=\"exampleFoldableBlock\"></foldable-block>"
                },
                {
                    "name": "justify-contents",
                    "description": "Justifies the content of the foldable block.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<foldable-block justify-contents=\"space-between\" id=\"exampleFoldableBlock\"></foldable-block>"
                },
                {
                    "name": "ngbAccordionItem",
                    "description": "Associates the foldable block with an NgbAccordionItem directive.",
                    "required": false,
                    "type": "directive",
                    "linkattributevalue": "id",
                    "example": "<foldable-block ngbAccordionItem=\"exampleAccordionItem\" id=\"exampleFoldableBlock\"></foldable-block>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether flex classes should be skipped for the foldable block.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "defaultValue": "true",
                    "example": "<foldable-block skip-flex=\"false\" id=\"exampleFoldableBlock\"></foldable-block>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<foldable-block background=\"none\" id=\"xhdy78\"></foldable-block>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<foldable-block background-color=\"#000\" id=\"xhdy78\"></foldable-block>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<foldable-block overflow=\"hidden\" id=\"xhdy78\"></foldable-block>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<foldable-blockdisplay-condition=\"true\" id=\"xhdy78\"></foldable-block>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<foldable-block background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></foldable-block>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<foldable-block background-position=\"center\" id=\"xhdy78\"></foldable-block>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<foldable-block background-size=\"cover\" id=\"xhdy78\"></foldable-block>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<foldable-block background-repeat=\"no-repeat\" id=\"xhdy78\"></foldable-block>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block border=\"medium\" id=\"sdj32\"></foldable-block>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block border-start=\"small\" id=\"bgt54\"></foldable-block>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block border-end=\"thick\" id=\"rty76\"></foldable-block>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block border-top=\"large\" id=\"zxc32\"></foldable-block>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block border-bottom=\"medium\" id=\"nhy87\"></foldable-block>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<foldable-block border-color=\"#333\" id=\"plm98\"></foldable-block>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block padding=\"medium\" id=\"jkl23\"></foldable-block>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block padding-start=\"thick\" id=\"qwe76\"></foldable-block>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block padding-top=\"large\" id=\"mnb45\"></foldable-block>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block padding-end=\"medium\" id=\"mki98\"></foldable-block>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block padding-bottom=\"compact\" id=\"yhn87\"></foldable-block>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block margin=\"medium\" id=\"vfr54\"></foldable-block>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block margin-start=\"slim\" id=\"azx32\"></foldable-block>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block margin-top=\"slim\" id=\"azx32\"></foldable-block>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block margin-end=\"thicker\" id=\"qwe98\"></foldable-block>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block margin-bottom=\"medium\" id=\"poi76\"></foldable-block>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<foldable-block css-class=\"my-custom-class\" id=\"dfg43\"></foldable-block>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<foldable-block height=\"medium\" id=\"sj889\"></foldable-block>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<foldable-block width=\"compact\" id=\"whd87\"></foldable-block>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<foldable-block transition=\"fade\" id=\"rfh45\"></foldable-block>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<foldable-block transition-duration=\"define-500ms\" id=\"tyu76\"></foldable-block>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<foldable-block on-click=\"handleClick\" id=\"jkv54\"></foldable-block>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<foldable-block on-click-args=\"['event']\" id=\"mnv32\"></foldable-block>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<foldable-block hidden=\"true\" id=\"plk98\"></foldable-block>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<foldable-block hidden=\"true\" id=\"plk98\"></foldable-block>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<foldable-block hidden=\"true\" id=\"plk98\"></foldable-block>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<foldable-block tootip=\"abc\" id=\"plk98\"></foldable-block>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<foldable-block tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></foldable-block>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<foldable-block tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></foldable-block>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<foldable-block hidden=\"true\" id=\"plk98\"></foldable-block>"
                }
            ],
            "allowedChildren": [
                "foldable-block-content",
                "foldable-block-header"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "foldable-block-content",
            "type": "WIDGET",
            "description": "Content within a foldable block.",
            "customprocess": true,
            "attributes": [
                {
                    "name": "width",
                    "description": "Sets the width of the foldable block content.",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "defaultValue": "full",
                    "example": "<foldable-block-content width=\"medium\" id=\"exampleFoldableBlockContent\"></foldable-block-content>"
                },
                {
                    "name": "direction",
                    "description": "Sets the layout direction of the foldable block content's children.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<foldable-block-content direction=\"column\" id=\"exampleFoldableBlockContent\"></foldable-block-content>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the foldable block content should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<foldable-block-content manage-children=\"true\" id=\"exampleFoldableBlockContent\"></foldable-block-content>"
                },
                {
                    "name": "children-sizes",
                    "description": "Sets the sizes of the foldable block content's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<foldable-block-content children-sizes=\"50% 50%\" id=\"exampleFoldableBlockContent\"></foldable-block-content>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Sets the flex values of the foldable block content's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<foldable-block-content children-flex-sizes=\"1 2\" id=\"exampleFoldableBlockContent\"></foldable-block-content>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the foldable block content.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<foldable-block-content align-items=\"center\" id=\"exampleFoldableBlockContent\"></foldable-block-content>"
                },
                {
                    "name": "justify-contents",
                    "description": "Justifies the content of the foldable block content.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<foldable-block-content justify-contents=\"space-between\" id=\"exampleFoldableBlockContent\"></foldable-block-content>"
                },
                {
                    "name": "ngbAccordionHeader",
                    "description": "Associates the foldable block content with an NgbAccordionHeader directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<foldable-block-content ngbAccordionHeader=\"exampleAccordionHeader\" id=\"exampleFoldableBlockContent\"></foldable-block-content>"
                },
                {
                    "name": "header-value",
                    "description": "Sets the value of the foldable block content's header.",
                    "required": false,
                    "mappedInputAttribute": "headerValue",
                    "type": "string",
                    "example": "<foldable-block-content header-value=\"Example Header\" id=\"exampleFoldableBlockContent\"></foldable-block-content>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether flex classes should be skipped for the foldable block content.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "defaultValue": "true",
                    "example": "<foldable-block-content skip-flex=\"false\" id=\"exampleFoldableBlockContent\"></foldable-block-content>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<foldable-block-content background=\"none\" id=\"xhdy78\"></foldable-block-content>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<foldable-block-content background-color=\"#000\" id=\"xhdy78\"></foldable-block-content>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<foldable-block-content overflow=\"hidden\" id=\"xhdy78\"></foldable-block-content>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<foldable-block-contentdisplay-condition=\"true\" id=\"xhdy78\"></foldable-block-content>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<foldable-block-content background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></foldable-block-content>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<foldable-block-content background-position=\"center\" id=\"xhdy78\"></foldable-block-content>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<foldable-block-content background-size=\"cover\" id=\"xhdy78\"></foldable-block-content>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<foldable-block-content background-repeat=\"no-repeat\" id=\"xhdy78\"></foldable-block-content>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content border=\"medium\" id=\"sdj32\"></foldable-block-content>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content border-start=\"small\" id=\"bgt54\"></foldable-block-content>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content border-end=\"thick\" id=\"rty76\"></foldable-block-content>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content border-top=\"large\" id=\"zxc32\"></foldable-block-content>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content border-bottom=\"medium\" id=\"nhy87\"></foldable-block-content>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<foldable-block-content border-color=\"#333\" id=\"plm98\"></foldable-block-content>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content padding=\"medium\" id=\"jkl23\"></foldable-block-content>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content padding-start=\"thick\" id=\"qwe76\"></foldable-block-content>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content padding-top=\"large\" id=\"mnb45\"></foldable-block-content>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content padding-end=\"medium\" id=\"mki98\"></foldable-block-content>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content padding-bottom=\"compact\" id=\"yhn87\"></foldable-block-content>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content margin=\"medium\" id=\"vfr54\"></foldable-block-content>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content margin-start=\"slim\" id=\"azx32\"></foldable-block-content>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content margin-top=\"slim\" id=\"azx32\"></foldable-block-content>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content margin-end=\"thicker\" id=\"qwe98\"></foldable-block-content>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-content margin-bottom=\"medium\" id=\"poi76\"></foldable-block-content>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<foldable-block-content css-class=\"my-custom-class\" id=\"dfg43\"></foldable-block-content>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<foldable-block-content height=\"medium\" id=\"sj889\"></foldable-block-content>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<foldable-block-content width=\"compact\" id=\"whd87\"></foldable-block-content>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<foldable-block-content transition=\"fade\" id=\"rfh45\"></foldable-block-content>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<foldable-block-content transition-duration=\"define-500ms\" id=\"tyu76\"></foldable-block-content>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<foldable-block-content on-click=\"handleClick\" id=\"jkv54\"></foldable-block-content>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<foldable-block-content on-click-args=\"['event']\" id=\"mnv32\"></foldable-block-content>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<foldable-block-content hidden=\"true\" id=\"plk98\"></foldable-block-content>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<foldable-block-content hidden=\"true\" id=\"plk98\"></foldable-block-content>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<foldable-block-content hidden=\"true\" id=\"plk98\"></foldable-block-content>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<foldable-block-content tootip=\"abc\" id=\"plk98\"></foldable-block-content>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<foldable-block-content tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></foldable-block-content>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<foldable-block-content tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></foldable-block-content>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<foldable-block-content hidden=\"true\" id=\"plk98\"></foldable-block-content>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "foldable-block-header",
            "type": "WIDGET",
            "description": "Header for a foldable block.",
            "customprocess": true,
            "attributes": [
                {
                    "name": "width",
                    "description": "Sets the width of the foldable block header.",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "defaultValue": "full",
                    "example": "<foldable-block-header width=\"medium\" id=\"exampleFoldableBlockHeader\"></foldable-block-header>"
                },
                {
                    "name": "direction",
                    "description": "Sets the layout direction of the foldable block header's children.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<foldable-block-header direction=\"column\" id=\"exampleFoldableBlockHeader\"></foldable-block-header>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the foldable block header should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<foldable-block-header manage-children=\"true\" id=\"exampleFoldableBlockHeader\"></foldable-block-header>"
                },
                {
                    "name": "children-sizes",
                    "description": "Sets the sizes of the foldable block header's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<foldable-block-header children-sizes=\"50% 50%\" id=\"exampleFoldableBlockHeader\"></foldable-block-header>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Sets the flex values of the foldable block header's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<foldable-block-header children-flex-sizes=\"1 2\" id=\"exampleFoldableBlockHeader\"></foldable-block-header>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the foldable block header.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<foldable-block-header align-items=\"center\" id=\"exampleFoldableBlockHeader\"></foldable-block-header>"
                },
                {
                    "name": "justify-contents",
                    "description": "Justifies the content of the foldable block header.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<foldable-block-header justify-contents=\"space-between\" id=\"exampleFoldableBlockHeader\"></foldable-block-header>"
                },
                {
                    "name": "ngbAccordionHeader",
                    "description": "Associates the foldable block header with an NgbAccordionHeader directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<foldable-block-header ngbAccordionHeader=\"exampleAccordionHeader\" id=\"exampleFoldableBlockHeader\"></foldable-block-header>"
                },
                {
                    "name": "header-value",
                    "description": "Sets the value of the foldable block header.",
                    "required": false,
                    "mappedInputAttribute": "headerValue",
                    "type": "string",
                    "example": "<foldable-block-header header-value=\"Example Header\" id=\"exampleFoldableBlockHeader\"></foldable-block-header>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<foldable-block-header background=\"none\" id=\"xhdy78\"></foldable-block-header>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<foldable-block-header background-color=\"#000\" id=\"xhdy78\"></foldable-block-header>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<foldable-block-header overflow=\"hidden\" id=\"xhdy78\"></foldable-block-header>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<foldable-block-headerdisplay-condition=\"true\" id=\"xhdy78\"></foldable-block-header>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<foldable-block-header background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></foldable-block-header>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<foldable-block-header background-position=\"center\" id=\"xhdy78\"></foldable-block-header>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<foldable-block-header background-size=\"cover\" id=\"xhdy78\"></foldable-block-header>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<foldable-block-header background-repeat=\"no-repeat\" id=\"xhdy78\"></foldable-block-header>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header border=\"medium\" id=\"sdj32\"></foldable-block-header>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header border-start=\"small\" id=\"bgt54\"></foldable-block-header>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header border-end=\"thick\" id=\"rty76\"></foldable-block-header>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header border-top=\"large\" id=\"zxc32\"></foldable-block-header>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header border-bottom=\"medium\" id=\"nhy87\"></foldable-block-header>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<foldable-block-header border-color=\"#333\" id=\"plm98\"></foldable-block-header>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header padding=\"medium\" id=\"jkl23\"></foldable-block-header>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header padding-start=\"thick\" id=\"qwe76\"></foldable-block-header>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header padding-top=\"large\" id=\"mnb45\"></foldable-block-header>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header padding-end=\"medium\" id=\"mki98\"></foldable-block-header>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header padding-bottom=\"compact\" id=\"yhn87\"></foldable-block-header>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header margin=\"medium\" id=\"vfr54\"></foldable-block-header>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header margin-start=\"slim\" id=\"azx32\"></foldable-block-header>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header margin-top=\"slim\" id=\"azx32\"></foldable-block-header>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header margin-end=\"thicker\" id=\"qwe98\"></foldable-block-header>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-block-header margin-bottom=\"medium\" id=\"poi76\"></foldable-block-header>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<foldable-block-header css-class=\"my-custom-class\" id=\"dfg43\"></foldable-block-header>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<foldable-block-header height=\"medium\" id=\"sj889\"></foldable-block-header>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<foldable-block-header width=\"compact\" id=\"whd87\"></foldable-block-header>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<foldable-block-header transition=\"fade\" id=\"rfh45\"></foldable-block-header>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<foldable-block-header transition-duration=\"define-500ms\" id=\"tyu76\"></foldable-block-header>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<foldable-block-header on-click=\"handleClick\" id=\"jkv54\"></foldable-block-header>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<foldable-block-header on-click-args=\"['event']\" id=\"mnv32\"></foldable-block-header>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<foldable-block-header hidden=\"true\" id=\"plk98\"></foldable-block-header>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<foldable-block-header hidden=\"true\" id=\"plk98\"></foldable-block-header>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<foldable-block-header hidden=\"true\" id=\"plk98\"></foldable-block-header>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<foldable-block-header tootip=\"abc\" id=\"plk98\"></foldable-block-header>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<foldable-block-header tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></foldable-block-header>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<foldable-block-header tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></foldable-block-header>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<foldable-block-header hidden=\"true\" id=\"plk98\"></foldable-block-header>"
                }
            ],
            "allowedChildren": null,
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "foldable-blocks",
            "type": "WIDGET",
            "description": "Collection of foldable blocks.",
            "customprocess": true,
            "attributes": [
                {
                    "name": "direction",
                    "description": "Sets the layout direction of the foldable blocks.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "defaultValue": "column",
                    "example": "<foldable-blocks direction=\"row\" id=\"exampleFoldableBlocks\"></foldable-blocks>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the foldable blocks should manage their children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<foldable-blocks manage-children=\"true\" id=\"exampleFoldableBlocks\"></foldable-blocks>"
                },
                {
                    "name": "children-sizes",
                    "description": "Sets the sizes of the foldable blocks' children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<foldable-blocks children-sizes=\"50% 50%\" id=\"exampleFoldableBlocks\"></foldable-blocks>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Sets the flex values of the foldable blocks' children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<foldable-blocks children-flex-sizes=\"1 2\" id=\"exampleFoldableBlocks\"></foldable-blocks>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the foldable blocks.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<foldable-blocks align-items=\"center\" id=\"exampleFoldableBlocks\"></foldable-blocks>"
                },
                {
                    "name": "justify-contents",
                    "description": "Justifies the content of the foldable blocks.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<foldable-blocks justify-contents=\"space-between\" id=\"exampleFoldableBlocks\"></foldable-blocks>"
                },
                {
                    "name": "animation",
                    "description": "Disables or enables animation for the foldable blocks.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "disableAnimation",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<foldable-blocks animation=\"true\" id=\"exampleFoldableBlocks\"></foldable-blocks>"
                },
                {
                    "name": "close-others",
                    "description": "Determines whether other foldable blocks should be closed when one is opened.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "closeOthers",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<foldable-blocks close-others=\"true\" id=\"exampleFoldableBlocks\"></foldable-blocks>"
                },
                {
                    "name": "destroy-on-hide",
                    "description": "Determines whether the foldable blocks should be destroyed when hidden.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "destroyOnHide",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<foldable-blocks destroy-on-hide=\"true\" id=\"exampleFoldableBlocks\"></foldable-blocks>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<foldable-blocks background=\"none\" id=\"xhdy78\"></foldable-blocks>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<foldable-blocks background-color=\"#000\" id=\"xhdy78\"></foldable-blocks>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<foldable-blocks overflow=\"hidden\" id=\"xhdy78\"></foldable-blocks>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<foldable-blocksdisplay-condition=\"true\" id=\"xhdy78\"></foldable-blocks>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<foldable-blocks background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></foldable-blocks>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<foldable-blocks background-position=\"center\" id=\"xhdy78\"></foldable-blocks>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<foldable-blocks background-size=\"cover\" id=\"xhdy78\"></foldable-blocks>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<foldable-blocks background-repeat=\"no-repeat\" id=\"xhdy78\"></foldable-blocks>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks border=\"medium\" id=\"sdj32\"></foldable-blocks>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks border-start=\"small\" id=\"bgt54\"></foldable-blocks>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks border-end=\"thick\" id=\"rty76\"></foldable-blocks>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks border-top=\"large\" id=\"zxc32\"></foldable-blocks>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks border-bottom=\"medium\" id=\"nhy87\"></foldable-blocks>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<foldable-blocks border-color=\"#333\" id=\"plm98\"></foldable-blocks>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks padding=\"medium\" id=\"jkl23\"></foldable-blocks>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks padding-start=\"thick\" id=\"qwe76\"></foldable-blocks>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks padding-top=\"large\" id=\"mnb45\"></foldable-blocks>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks padding-end=\"medium\" id=\"mki98\"></foldable-blocks>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks padding-bottom=\"compact\" id=\"yhn87\"></foldable-blocks>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks margin=\"medium\" id=\"vfr54\"></foldable-blocks>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks margin-start=\"slim\" id=\"azx32\"></foldable-blocks>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks margin-top=\"slim\" id=\"azx32\"></foldable-blocks>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks margin-end=\"thicker\" id=\"qwe98\"></foldable-blocks>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<foldable-blocks margin-bottom=\"medium\" id=\"poi76\"></foldable-blocks>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<foldable-blocks css-class=\"my-custom-class\" id=\"dfg43\"></foldable-blocks>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<foldable-blocks height=\"medium\" id=\"sj889\"></foldable-blocks>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<foldable-blocks width=\"compact\" id=\"whd87\"></foldable-blocks>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<foldable-blocks transition=\"fade\" id=\"rfh45\"></foldable-blocks>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<foldable-blocks transition-duration=\"define-500ms\" id=\"tyu76\"></foldable-blocks>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<foldable-blocks on-click=\"handleClick\" id=\"jkv54\"></foldable-blocks>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<foldable-blocks on-click-args=\"['event']\" id=\"mnv32\"></foldable-blocks>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<foldable-blocks hidden=\"true\" id=\"plk98\"></foldable-blocks>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<foldable-blocks hidden=\"true\" id=\"plk98\"></foldable-blocks>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<foldable-blocks hidden=\"true\" id=\"plk98\"></foldable-blocks>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<foldable-blocks tootip=\"abc\" id=\"plk98\"></foldable-blocks>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<foldable-blocks tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></foldable-blocks>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<foldable-blocks tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></foldable-blocks>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<foldable-blocks hidden=\"true\" id=\"plk98\"></foldable-blocks>"
                }
            ],
            "allowedChildren": [
                "foldable-block"
            ],
            "declarativeComponentTag": "ng-declarative-foldable-blocks"
        },
        {
            "tag": "navbar",
            "type": "WIDGET",
            "description": "Navigation bar component.",
            "attributes": [
                {
                    "name": "brand-text",
                    "description": "Specify the brand text for the navbar component",
                    "required": false,
                    "mappedInputAttribute": "brandText",
                    "type": "string",
                    "example": "<navbar brand-text=\"Brand\"/>"
                },
                {
                    "name": "brand-text-css-class",
                    "description": "Specify the brand text css class for the navbar component",
                    "required": false,
                    "mappedInputAttribute": "brandTextCssClass",
                    "type": "string",
                    "example": "<navbar brand-text-css-class=\"customcss\"/>"
                },
                {
                    "name": "brand-image",
                    "description": "Specify the brand icon for the navbar component",
                    "required": false,
                    "mappedInputAttribute": "brandImage",
                    "type": "string",
                    "example": "<navbar brand-image=\"assets/brand.jpg\"/>"
                },
                {
                    "name": "brand-icon",
                    "description": "Specify the brand icon for the navbar component",
                    "required": false,
                    "mappedInputAttribute": "brandIcon",
                    "type": "string",
                    "example": "<navbar brand-icon=\"bi arrow-up\"/>"
                },
                {
                    "name": "color-scheme",
                    "description": "Specify the color scheme for the navbar component",
                    "required": false,
                    "mappedInputAttribute": "colorScheme",
                    "type": "string",
                    "allowedValues": "light | dark",
                    "example": "<navbar color-scheme=\"light\"/>"
                },
                {
                    "name": "sticky",
                    "description": "If true a navbar will be fixed",
                    "required": false,
                    "mappedInputAttribute": "fixedTop",
                    "type": "boolean",
                    "objectbinding": true,
                    "allowedValues": "true | false",
                    "example": "<navbar fixed-top=\"true\"/>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<navbar background=\"none\" id=\"xhdy78\"></navbar>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<navbar background-color=\"#000\" id=\"xhdy78\"></navbar>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<navbar overflow=\"hidden\" id=\"xhdy78\"></navbar>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<navbardisplay-condition=\"true\" id=\"xhdy78\"></navbar>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<navbar background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></navbar>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<navbar background-position=\"center\" id=\"xhdy78\"></navbar>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<navbar background-size=\"cover\" id=\"xhdy78\"></navbar>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<navbar background-repeat=\"no-repeat\" id=\"xhdy78\"></navbar>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar border=\"medium\" id=\"sdj32\"></navbar>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar border-start=\"small\" id=\"bgt54\"></navbar>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar border-end=\"thick\" id=\"rty76\"></navbar>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar border-top=\"large\" id=\"zxc32\"></navbar>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar border-bottom=\"medium\" id=\"nhy87\"></navbar>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<navbar border-color=\"#333\" id=\"plm98\"></navbar>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar padding=\"medium\" id=\"jkl23\"></navbar>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar padding-start=\"thick\" id=\"qwe76\"></navbar>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar padding-top=\"large\" id=\"mnb45\"></navbar>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar padding-end=\"medium\" id=\"mki98\"></navbar>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar padding-bottom=\"compact\" id=\"yhn87\"></navbar>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar margin=\"medium\" id=\"vfr54\"></navbar>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar margin-start=\"slim\" id=\"azx32\"></navbar>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar margin-top=\"slim\" id=\"azx32\"></navbar>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar margin-end=\"thicker\" id=\"qwe98\"></navbar>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar margin-bottom=\"medium\" id=\"poi76\"></navbar>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<navbar css-class=\"my-custom-class\" id=\"dfg43\"></navbar>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<navbar height=\"medium\" id=\"sj889\"></navbar>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<navbar width=\"compact\" id=\"whd87\"></navbar>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<navbar transition=\"fade\" id=\"rfh45\"></navbar>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<navbar transition-duration=\"define-500ms\" id=\"tyu76\"></navbar>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<navbar on-click=\"handleClick\" id=\"jkv54\"></navbar>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<navbar on-click-args=\"['event']\" id=\"mnv32\"></navbar>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<navbar hidden=\"true\" id=\"plk98\"></navbar>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<navbar hidden=\"true\" id=\"plk98\"></navbar>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<navbar hidden=\"true\" id=\"plk98\"></navbar>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<navbar tootip=\"abc\" id=\"plk98\"></navbar>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<navbar tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></navbar>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<navbar tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></navbar>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<navbar hidden=\"true\" id=\"plk98\"></navbar>"
                }
            ],
            "allowedChildren": [
                "navbar-start",
                "navbar-center",
                "navbar-end"
            ],
            "allowedInParent": [
                "ng-declarative-app",
                "route"
            ],
            "declarativeComponentTag": "ng-declarative-navbar"
        },
        {
            "tag": "navbar-center",
            "type": "WIDGET",
            "parent": "navbar",
            "description": "Center slot in a navbar component.",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Specifies the layout direction of the block.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block direction=\"row\">...</block>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the block should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<block manage-children=\"true\">...</block>"
                },
                {
                    "name": "children-sizes",
                    "description": "Specifies the sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<block children-sizes=\"50% 50%\">...</block>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Specifies the flex sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<block children-flex-sizes=\"1 2\">...</block>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the block along the cross-axis.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<block align-items=\"center\">...</block>"
                },
                {
                    "name": "justify-contents",
                    "description": "Aligns the content of the block along the main-axis.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<block justify-contents=\"space-between\">...</block>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether to skip applying flex classes to the block.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<block skip-flex=\"true\">...</block>"
                },
                {
                    "name": "slotcenter",
                    "description": "Associates the block with an center-slot directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<navbar-start ></navbar-start>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "defaultValue": "display-contents",
                    "type": "string",
                    "example": "<navbar-ceneter  css-class=\"my-custom-class\" id=\"dfg43\"></navbar-start>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<navbar-center background=\"none\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<navbar-center background-color=\"#000\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<navbar-center overflow=\"hidden\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<navbar-centerdisplay-condition=\"true\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<navbar-center background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<navbar-center background-position=\"center\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<navbar-center background-size=\"cover\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<navbar-center background-repeat=\"no-repeat\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center border=\"medium\" id=\"sdj32\"></navbar-center>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center border-start=\"small\" id=\"bgt54\"></navbar-center>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center border-end=\"thick\" id=\"rty76\"></navbar-center>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center border-top=\"large\" id=\"zxc32\"></navbar-center>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center border-bottom=\"medium\" id=\"nhy87\"></navbar-center>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<navbar-center border-color=\"#333\" id=\"plm98\"></navbar-center>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center padding=\"medium\" id=\"jkl23\"></navbar-center>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center padding-start=\"thick\" id=\"qwe76\"></navbar-center>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center padding-top=\"large\" id=\"mnb45\"></navbar-center>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center padding-end=\"medium\" id=\"mki98\"></navbar-center>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center padding-bottom=\"compact\" id=\"yhn87\"></navbar-center>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center margin=\"medium\" id=\"vfr54\"></navbar-center>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center margin-start=\"slim\" id=\"azx32\"></navbar-center>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center margin-top=\"slim\" id=\"azx32\"></navbar-center>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center margin-end=\"thicker\" id=\"qwe98\"></navbar-center>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center margin-bottom=\"medium\" id=\"poi76\"></navbar-center>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<navbar-center css-class=\"my-custom-class\" id=\"dfg43\"></navbar-center>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<navbar-center height=\"medium\" id=\"sj889\"></navbar-center>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<navbar-center width=\"compact\" id=\"whd87\"></navbar-center>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<navbar-center transition=\"fade\" id=\"rfh45\"></navbar-center>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<navbar-center transition-duration=\"define-500ms\" id=\"tyu76\"></navbar-center>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<navbar-center on-click=\"handleClick\" id=\"jkv54\"></navbar-center>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<navbar-center on-click-args=\"['event']\" id=\"mnv32\"></navbar-center>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<navbar-center hidden=\"true\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<navbar-center hidden=\"true\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<navbar-center hidden=\"true\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<navbar-center tootip=\"abc\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<navbar-center tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<navbar-center tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<navbar-center hidden=\"true\" id=\"plk98\"></navbar-center>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "allowedInParent": [
                "navbar"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "navbar-end",
            "type": "WIDGET",
            "parent": "navbar",
            "description": "End slot in a navbar component.",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Specifies the layout direction of the block.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block direction=\"row\">...</block>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the block should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<block manage-children=\"true\">...</block>"
                },
                {
                    "name": "children-sizes",
                    "description": "Specifies the sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<block children-sizes=\"50% 50%\">...</block>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Specifies the flex sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<block children-flex-sizes=\"1 2\">...</block>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the block along the cross-axis.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<block align-items=\"center\">...</block>"
                },
                {
                    "name": "justify-contents",
                    "description": "Aligns the content of the block along the main-axis.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<block justify-contents=\"space-between\">...</block>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether to skip applying flex classes to the block.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<block skip-flex=\"true\">...</block>"
                },
                {
                    "name": "slotend",
                    "description": "Associates the block with an end-slot directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<navbar-start ></navbar-start>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "defaultValue": "display-contents",
                    "type": "string",
                    "example": "<navbar-start  css-class=\"my-custom-class\" id=\"dfg43\"></navbar-start>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<navbar-center background=\"none\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<navbar-center background-color=\"#000\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<navbar-center overflow=\"hidden\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<navbar-centerdisplay-condition=\"true\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<navbar-center background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<navbar-center background-position=\"center\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<navbar-center background-size=\"cover\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<navbar-center background-repeat=\"no-repeat\" id=\"xhdy78\"></navbar-center>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center border=\"medium\" id=\"sdj32\"></navbar-center>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center border-start=\"small\" id=\"bgt54\"></navbar-center>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center border-end=\"thick\" id=\"rty76\"></navbar-center>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center border-top=\"large\" id=\"zxc32\"></navbar-center>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center border-bottom=\"medium\" id=\"nhy87\"></navbar-center>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<navbar-center border-color=\"#333\" id=\"plm98\"></navbar-center>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center padding=\"medium\" id=\"jkl23\"></navbar-center>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center padding-start=\"thick\" id=\"qwe76\"></navbar-center>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center padding-top=\"large\" id=\"mnb45\"></navbar-center>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center padding-end=\"medium\" id=\"mki98\"></navbar-center>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center padding-bottom=\"compact\" id=\"yhn87\"></navbar-center>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center margin=\"medium\" id=\"vfr54\"></navbar-center>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center margin-start=\"slim\" id=\"azx32\"></navbar-center>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center margin-top=\"slim\" id=\"azx32\"></navbar-center>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center margin-end=\"thicker\" id=\"qwe98\"></navbar-center>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-center margin-bottom=\"medium\" id=\"poi76\"></navbar-center>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<navbar-center css-class=\"my-custom-class\" id=\"dfg43\"></navbar-center>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<navbar-center height=\"medium\" id=\"sj889\"></navbar-center>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<navbar-center width=\"compact\" id=\"whd87\"></navbar-center>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<navbar-center transition=\"fade\" id=\"rfh45\"></navbar-center>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<navbar-center transition-duration=\"define-500ms\" id=\"tyu76\"></navbar-center>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<navbar-center on-click=\"handleClick\" id=\"jkv54\"></navbar-center>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<navbar-center on-click-args=\"['event']\" id=\"mnv32\"></navbar-center>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<navbar-center hidden=\"true\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<navbar-center hidden=\"true\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<navbar-center hidden=\"true\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<navbar-center tootip=\"abc\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<navbar-center tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<navbar-center tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></navbar-center>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<navbar-center hidden=\"true\" id=\"plk98\"></navbar-center>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "allowedInParent": [
                "navbar"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "navbar-start",
            "type": "WIDGET",
            "parent": "navbar",
            "description": "Start slot in a navbar component.",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Specifies the layout direction of the block.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block direction=\"row\">...</block>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "defaultValue": "display-contents",
                    "type": "string",
                    "example": "<navbar-start  css-class=\"my-custom-class\" id=\"dfg43\"></navbar-start>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the block should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<block manage-children=\"true\">...</block>"
                },
                {
                    "name": "children-sizes",
                    "description": "Specifies the sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<block children-sizes=\"50% 50%\">...</block>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Specifies the flex sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<block children-flex-sizes=\"1 2\">...</block>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the block along the cross-axis.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<block align-items=\"center\">...</block>"
                },
                {
                    "name": "justify-contents",
                    "description": "Aligns the content of the block along the main-axis.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<block justify-contents=\"space-between\">...</block>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether to skip applying flex classes to the block.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "defaultValue": "true",
                    "allowedValues": "true | false",
                    "example": "<block skip-flex=\"true\">...</block>"
                },
                {
                    "name": "slotstart",
                    "description": "Associates the block with an start-slot directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<navbar-start ></navbar-start>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<navbar-start background=\"none\" id=\"xhdy78\"></navbar-start>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<navbar-start background-color=\"#000\" id=\"xhdy78\"></navbar-start>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<navbar-start overflow=\"hidden\" id=\"xhdy78\"></navbar-start>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<navbar-startdisplay-condition=\"true\" id=\"xhdy78\"></navbar-start>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<navbar-start background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></navbar-start>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<navbar-start background-position=\"center\" id=\"xhdy78\"></navbar-start>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<navbar-start background-size=\"cover\" id=\"xhdy78\"></navbar-start>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<navbar-start background-repeat=\"no-repeat\" id=\"xhdy78\"></navbar-start>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start border=\"medium\" id=\"sdj32\"></navbar-start>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start border-start=\"small\" id=\"bgt54\"></navbar-start>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start border-end=\"thick\" id=\"rty76\"></navbar-start>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start border-top=\"large\" id=\"zxc32\"></navbar-start>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start border-bottom=\"medium\" id=\"nhy87\"></navbar-start>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<navbar-start border-color=\"#333\" id=\"plm98\"></navbar-start>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start padding=\"medium\" id=\"jkl23\"></navbar-start>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start padding-start=\"thick\" id=\"qwe76\"></navbar-start>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start padding-top=\"large\" id=\"mnb45\"></navbar-start>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start padding-end=\"medium\" id=\"mki98\"></navbar-start>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start padding-bottom=\"compact\" id=\"yhn87\"></navbar-start>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start margin=\"medium\" id=\"vfr54\"></navbar-start>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start margin-start=\"slim\" id=\"azx32\"></navbar-start>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start margin-top=\"slim\" id=\"azx32\"></navbar-start>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start margin-end=\"thicker\" id=\"qwe98\"></navbar-start>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navbar-start margin-bottom=\"medium\" id=\"poi76\"></navbar-start>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<navbar-start css-class=\"my-custom-class\" id=\"dfg43\"></navbar-start>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<navbar-start height=\"medium\" id=\"sj889\"></navbar-start>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<navbar-start width=\"compact\" id=\"whd87\"></navbar-start>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<navbar-start transition=\"fade\" id=\"rfh45\"></navbar-start>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<navbar-start transition-duration=\"define-500ms\" id=\"tyu76\"></navbar-start>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<navbar-start on-click=\"handleClick\" id=\"jkv54\"></navbar-start>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<navbar-start on-click-args=\"['event']\" id=\"mnv32\"></navbar-start>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<navbar-start hidden=\"true\" id=\"plk98\"></navbar-start>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<navbar-start hidden=\"true\" id=\"plk98\"></navbar-start>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<navbar-start hidden=\"true\" id=\"plk98\"></navbar-start>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<navbar-start tootip=\"abc\" id=\"plk98\"></navbar-start>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<navbar-start tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></navbar-start>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<navbar-start tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></navbar-start>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<navbar-start hidden=\"true\" id=\"plk98\"></navbar-start>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "allowedInParent": [
                "navbar"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "navitem",
            "type": "WIDGET",
            "parent": "navbar",
            "description": "A navigation item.",
            "attributes": [
                {
                    "name": "route",
                    "description": "Specify the route of for a nav item",
                    "required": true,
                    "mappedInputAttribute": "route",
                    "type": "string",
                    "example": "<navitem route=\"/route2\"/>"
                },
                {
                    "name": "label",
                    "description": "Specify the label of a nav item",
                    "required": false,
                    "mappedInputAttribute": "label",
                    "type": "string",
                    "example": "<navitem label=\"Example\"/>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<navitem background=\"none\" id=\"xhdy78\"></navitem>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<navitem background-color=\"#000\" id=\"xhdy78\"></navitem>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<navitem overflow=\"hidden\" id=\"xhdy78\"></navitem>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<navitemdisplay-condition=\"true\" id=\"xhdy78\"></navitem>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<navitem background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></navitem>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<navitem background-position=\"center\" id=\"xhdy78\"></navitem>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<navitem background-size=\"cover\" id=\"xhdy78\"></navitem>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<navitem background-repeat=\"no-repeat\" id=\"xhdy78\"></navitem>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem border=\"medium\" id=\"sdj32\"></navitem>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem border-start=\"small\" id=\"bgt54\"></navitem>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem border-end=\"thick\" id=\"rty76\"></navitem>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem border-top=\"large\" id=\"zxc32\"></navitem>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem border-bottom=\"medium\" id=\"nhy87\"></navitem>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<navitem border-color=\"#333\" id=\"plm98\"></navitem>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem padding=\"medium\" id=\"jkl23\"></navitem>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem padding-start=\"thick\" id=\"qwe76\"></navitem>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem padding-top=\"large\" id=\"mnb45\"></navitem>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem padding-end=\"medium\" id=\"mki98\"></navitem>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem padding-bottom=\"compact\" id=\"yhn87\"></navitem>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem margin=\"medium\" id=\"vfr54\"></navitem>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem margin-start=\"slim\" id=\"azx32\"></navitem>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem margin-top=\"slim\" id=\"azx32\"></navitem>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem margin-end=\"thicker\" id=\"qwe98\"></navitem>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<navitem margin-bottom=\"medium\" id=\"poi76\"></navitem>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<navitem css-class=\"my-custom-class\" id=\"dfg43\"></navitem>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<navitem height=\"medium\" id=\"sj889\"></navitem>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<navitem width=\"compact\" id=\"whd87\"></navitem>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<navitem transition=\"fade\" id=\"rfh45\"></navitem>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<navitem transition-duration=\"define-500ms\" id=\"tyu76\"></navitem>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<navitem on-click=\"handleClick\" id=\"jkv54\"></navitem>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<navitem on-click-args=\"['event']\" id=\"mnv32\"></navitem>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<navitem hidden=\"true\" id=\"plk98\"></navitem>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<navitem hidden=\"true\" id=\"plk98\"></navitem>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<navitem hidden=\"true\" id=\"plk98\"></navitem>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<navitem tootip=\"abc\" id=\"plk98\"></navitem>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<navitem tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></navitem>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<navitem tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></navitem>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<navitem hidden=\"true\" id=\"plk98\"></navitem>"
                }
            ],
            "allowedChildren": null,
            "allowedInParent": [
                "navbar-start",
                "navbar-end",
                "navbar-center"
            ],
            "declarativeComponentTag": "ng-declarative-navitem"
        },
        {
            "tag": "sidebar",
            "type": "WIDGET",
            "description": "Side bar component.",
            "attributes": [
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<sidebar background=\"none\" id=\"xhdy78\"></sidebar>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<sidebar background-color=\"#000\" id=\"xhdy78\"></sidebar>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<sidebar overflow=\"hidden\" id=\"xhdy78\"></sidebar>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<sidebardisplay-condition=\"true\" id=\"xhdy78\"></sidebar>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<sidebar background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></sidebar>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<sidebar background-position=\"center\" id=\"xhdy78\"></sidebar>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<sidebar background-size=\"cover\" id=\"xhdy78\"></sidebar>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<sidebar background-repeat=\"no-repeat\" id=\"xhdy78\"></sidebar>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar border=\"medium\" id=\"sdj32\"></sidebar>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar border-start=\"small\" id=\"bgt54\"></sidebar>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar border-end=\"thick\" id=\"rty76\"></sidebar>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar border-top=\"large\" id=\"zxc32\"></sidebar>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar border-bottom=\"medium\" id=\"nhy87\"></sidebar>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<sidebar border-color=\"#333\" id=\"plm98\"></sidebar>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar padding=\"medium\" id=\"jkl23\"></sidebar>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar padding-start=\"thick\" id=\"qwe76\"></sidebar>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar padding-top=\"large\" id=\"mnb45\"></sidebar>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar padding-end=\"medium\" id=\"mki98\"></sidebar>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar padding-bottom=\"compact\" id=\"yhn87\"></sidebar>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar margin=\"medium\" id=\"vfr54\"></sidebar>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar margin-start=\"slim\" id=\"azx32\"></sidebar>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar margin-top=\"slim\" id=\"azx32\"></sidebar>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar margin-end=\"thicker\" id=\"qwe98\"></sidebar>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar margin-bottom=\"medium\" id=\"poi76\"></sidebar>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<sidebar css-class=\"my-custom-class\" id=\"dfg43\"></sidebar>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<sidebar height=\"medium\" id=\"sj889\"></sidebar>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<sidebar width=\"compact\" id=\"whd87\"></sidebar>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<sidebar transition=\"fade\" id=\"rfh45\"></sidebar>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<sidebar transition-duration=\"define-500ms\" id=\"tyu76\"></sidebar>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<sidebar on-click=\"handleClick\" id=\"jkv54\"></sidebar>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<sidebar on-click-args=\"['event']\" id=\"mnv32\"></sidebar>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<sidebar hidden=\"true\" id=\"plk98\"></sidebar>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<sidebar hidden=\"true\" id=\"plk98\"></sidebar>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<sidebar hidden=\"true\" id=\"plk98\"></sidebar>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<sidebar tootip=\"abc\" id=\"plk98\"></sidebar>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<sidebar tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></sidebar>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<sidebar tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></sidebar>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<sidebar hidden=\"true\" id=\"plk98\"></sidebar>"
                }
            ],
            "allowedChildren": [
                "sidebar-start",
                "sidebar-center",
                "sidebar-end",
                "sidebar-content"
            ],
            "declarativeComponentTag": "ng-declarative-sidebar"
        },
        {
            "tag": "sidebar-center",
            "type": "WIDGET",
            "parent": "sidebar",
            "description": "Center slot in a sidebar component.",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Specifies the layout direction of the block.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block direction=\"row\">...</block>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the block should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<block manage-children=\"true\">...</block>"
                },
                {
                    "name": "children-sizes",
                    "description": "Specifies the sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<block children-sizes=\"50% 50%\">...</block>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Specifies the flex sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<block children-flex-sizes=\"1 2\">...</block>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the block along the cross-axis.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<block align-items=\"center\">...</block>"
                },
                {
                    "name": "justify-contents",
                    "description": "Aligns the content of the block along the main-axis.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<block justify-contents=\"space-between\">...</block>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether to skip applying flex classes to the block.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<block skip-flex=\"true\">...</block>"
                },
                {
                    "name": "slotcenter",
                    "description": "Associates the block with an center-slot directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<sidebar-start ></sidebar-start>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "defaultValue": "display-contents",
                    "type": "string",
                    "example": "<sidebar-ceneter  css-class=\"my-custom-class\" id=\"dfg43\"></sidebar-start>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<sidebar-center background=\"none\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<sidebar-center background-color=\"#000\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<sidebar-center overflow=\"hidden\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<sidebar-centerdisplay-condition=\"true\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<sidebar-center background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<sidebar-center background-position=\"center\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<sidebar-center background-size=\"cover\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<sidebar-center background-repeat=\"no-repeat\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center border=\"medium\" id=\"sdj32\"></sidebar-center>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center border-start=\"small\" id=\"bgt54\"></sidebar-center>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center border-end=\"thick\" id=\"rty76\"></sidebar-center>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center border-top=\"large\" id=\"zxc32\"></sidebar-center>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center border-bottom=\"medium\" id=\"nhy87\"></sidebar-center>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<sidebar-center border-color=\"#333\" id=\"plm98\"></sidebar-center>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center padding=\"medium\" id=\"jkl23\"></sidebar-center>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center padding-start=\"thick\" id=\"qwe76\"></sidebar-center>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center padding-top=\"large\" id=\"mnb45\"></sidebar-center>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center padding-end=\"medium\" id=\"mki98\"></sidebar-center>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center padding-bottom=\"compact\" id=\"yhn87\"></sidebar-center>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center margin=\"medium\" id=\"vfr54\"></sidebar-center>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center margin-start=\"slim\" id=\"azx32\"></sidebar-center>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center margin-top=\"slim\" id=\"azx32\"></sidebar-center>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center margin-end=\"thicker\" id=\"qwe98\"></sidebar-center>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center margin-bottom=\"medium\" id=\"poi76\"></sidebar-center>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<sidebar-center css-class=\"my-custom-class\" id=\"dfg43\"></sidebar-center>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<sidebar-center height=\"medium\" id=\"sj889\"></sidebar-center>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<sidebar-center width=\"compact\" id=\"whd87\"></sidebar-center>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<sidebar-center transition=\"fade\" id=\"rfh45\"></sidebar-center>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<sidebar-center transition-duration=\"define-500ms\" id=\"tyu76\"></sidebar-center>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<sidebar-center on-click=\"handleClick\" id=\"jkv54\"></sidebar-center>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<sidebar-center on-click-args=\"['event']\" id=\"mnv32\"></sidebar-center>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<sidebar-center hidden=\"true\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<sidebar-center hidden=\"true\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<sidebar-center hidden=\"true\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<sidebar-center tootip=\"abc\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<sidebar-center tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<sidebar-center tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<sidebar-center hidden=\"true\" id=\"plk98\"></sidebar-center>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "allowedInParent": [
                "sidebar"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "sidebar-content",
            "type": "WIDGET",
            "parent": "sidebar",
            "description": "Center slot in a sidebar component.",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Specifies the layout direction of the block.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block direction=\"row\">...</block>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the block should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<block manage-children=\"true\">...</block>"
                },
                {
                    "name": "children-sizes",
                    "description": "Specifies the sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<block children-sizes=\"50% 50%\">...</block>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Specifies the flex sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<block children-flex-sizes=\"1 2\">...</block>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the block along the cross-axis.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<block align-items=\"center\">...</block>"
                },
                {
                    "name": "justify-contents",
                    "description": "Aligns the content of the block along the main-axis.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<block justify-contents=\"space-between\">...</block>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether to skip applying flex classes to the block.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<block skip-flex=\"true\">...</block>"
                },
                {
                    "name": "slotcontent",
                    "description": "Associates the block with an content-slot directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<sidebar-start ></sidebar-start>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "defaultValue": "display-contents",
                    "type": "string",
                    "example": "<sidebar-ceneter  css-class=\"my-custom-class\" id=\"dfg43\"></sidebar-start>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<sidebar-content background=\"none\" id=\"xhdy78\"></sidebar-content>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<sidebar-content background-color=\"#000\" id=\"xhdy78\"></sidebar-content>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<sidebar-content overflow=\"hidden\" id=\"xhdy78\"></sidebar-content>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<sidebar-contentdisplay-condition=\"true\" id=\"xhdy78\"></sidebar-content>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<sidebar-content background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></sidebar-content>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<sidebar-content background-position=\"center\" id=\"xhdy78\"></sidebar-content>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<sidebar-content background-size=\"cover\" id=\"xhdy78\"></sidebar-content>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<sidebar-content background-repeat=\"no-repeat\" id=\"xhdy78\"></sidebar-content>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content border=\"medium\" id=\"sdj32\"></sidebar-content>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content border-start=\"small\" id=\"bgt54\"></sidebar-content>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content border-end=\"thick\" id=\"rty76\"></sidebar-content>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content border-top=\"large\" id=\"zxc32\"></sidebar-content>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content border-bottom=\"medium\" id=\"nhy87\"></sidebar-content>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<sidebar-content border-color=\"#333\" id=\"plm98\"></sidebar-content>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content padding=\"medium\" id=\"jkl23\"></sidebar-content>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content padding-start=\"thick\" id=\"qwe76\"></sidebar-content>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content padding-top=\"large\" id=\"mnb45\"></sidebar-content>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content padding-end=\"medium\" id=\"mki98\"></sidebar-content>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content padding-bottom=\"compact\" id=\"yhn87\"></sidebar-content>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content margin=\"medium\" id=\"vfr54\"></sidebar-content>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content margin-start=\"slim\" id=\"azx32\"></sidebar-content>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content margin-top=\"slim\" id=\"azx32\"></sidebar-content>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content margin-end=\"thicker\" id=\"qwe98\"></sidebar-content>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-content margin-bottom=\"medium\" id=\"poi76\"></sidebar-content>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<sidebar-content css-class=\"my-custom-class\" id=\"dfg43\"></sidebar-content>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<sidebar-content height=\"medium\" id=\"sj889\"></sidebar-content>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<sidebar-content width=\"compact\" id=\"whd87\"></sidebar-content>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<sidebar-content transition=\"fade\" id=\"rfh45\"></sidebar-content>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<sidebar-content transition-duration=\"define-500ms\" id=\"tyu76\"></sidebar-content>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<sidebar-content on-click=\"handleClick\" id=\"jkv54\"></sidebar-content>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<sidebar-content on-click-args=\"['event']\" id=\"mnv32\"></sidebar-content>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<sidebar-content hidden=\"true\" id=\"plk98\"></sidebar-content>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<sidebar-content hidden=\"true\" id=\"plk98\"></sidebar-content>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<sidebar-content hidden=\"true\" id=\"plk98\"></sidebar-content>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<sidebar-content tootip=\"abc\" id=\"plk98\"></sidebar-content>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<sidebar-content tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></sidebar-content>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<sidebar-content tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></sidebar-content>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<sidebar-content hidden=\"true\" id=\"plk98\"></sidebar-content>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "allowedInParent": [
                "sidebar"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "sidebar-end",
            "type": "WIDGET",
            "parent": "sidebar",
            "description": "End slot in a sidebar component.",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Specifies the layout direction of the block.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block direction=\"row\">...</block>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the block should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<block manage-children=\"true\">...</block>"
                },
                {
                    "name": "children-sizes",
                    "description": "Specifies the sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<block children-sizes=\"50% 50%\">...</block>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Specifies the flex sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<block children-flex-sizes=\"1 2\">...</block>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the block along the cross-axis.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<block align-items=\"center\">...</block>"
                },
                {
                    "name": "justify-contents",
                    "description": "Aligns the content of the block along the main-axis.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<block justify-contents=\"space-between\">...</block>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether to skip applying flex classes to the block.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<block skip-flex=\"true\">...</block>"
                },
                {
                    "name": "slotend",
                    "description": "Associates the block with an end-slot directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<sidebar-start ></sidebar-start>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "defaultValue": "display-contents",
                    "type": "string",
                    "example": "<sidebar-start  css-class=\"my-custom-class\" id=\"dfg43\"></sidebar-start>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<sidebar-center background=\"none\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<sidebar-center background-color=\"#000\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<sidebar-center overflow=\"hidden\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<sidebar-centerdisplay-condition=\"true\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<sidebar-center background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<sidebar-center background-position=\"center\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<sidebar-center background-size=\"cover\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<sidebar-center background-repeat=\"no-repeat\" id=\"xhdy78\"></sidebar-center>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center border=\"medium\" id=\"sdj32\"></sidebar-center>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center border-start=\"small\" id=\"bgt54\"></sidebar-center>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center border-end=\"thick\" id=\"rty76\"></sidebar-center>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center border-top=\"large\" id=\"zxc32\"></sidebar-center>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center border-bottom=\"medium\" id=\"nhy87\"></sidebar-center>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<sidebar-center border-color=\"#333\" id=\"plm98\"></sidebar-center>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center padding=\"medium\" id=\"jkl23\"></sidebar-center>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center padding-start=\"thick\" id=\"qwe76\"></sidebar-center>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center padding-top=\"large\" id=\"mnb45\"></sidebar-center>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center padding-end=\"medium\" id=\"mki98\"></sidebar-center>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center padding-bottom=\"compact\" id=\"yhn87\"></sidebar-center>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center margin=\"medium\" id=\"vfr54\"></sidebar-center>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center margin-start=\"slim\" id=\"azx32\"></sidebar-center>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center margin-top=\"slim\" id=\"azx32\"></sidebar-center>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center margin-end=\"thicker\" id=\"qwe98\"></sidebar-center>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-center margin-bottom=\"medium\" id=\"poi76\"></sidebar-center>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<sidebar-center css-class=\"my-custom-class\" id=\"dfg43\"></sidebar-center>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<sidebar-center height=\"medium\" id=\"sj889\"></sidebar-center>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<sidebar-center width=\"compact\" id=\"whd87\"></sidebar-center>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<sidebar-center transition=\"fade\" id=\"rfh45\"></sidebar-center>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<sidebar-center transition-duration=\"define-500ms\" id=\"tyu76\"></sidebar-center>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<sidebar-center on-click=\"handleClick\" id=\"jkv54\"></sidebar-center>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<sidebar-center on-click-args=\"['event']\" id=\"mnv32\"></sidebar-center>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<sidebar-center hidden=\"true\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<sidebar-center hidden=\"true\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<sidebar-center hidden=\"true\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<sidebar-center tootip=\"abc\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<sidebar-center tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<sidebar-center tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></sidebar-center>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<sidebar-center hidden=\"true\" id=\"plk98\"></sidebar-center>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "allowedInParent": [
                "sidebar"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "sidebar-navitem",
            "type": "WIDGET",
            "parent": "sidebar",
            "description": "A navigation item.",
            "attributes": [
                {
                    "name": "route",
                    "description": "Specify the route of for a nav item",
                    "required": false,
                    "mappedInputAttribute": "route",
                    "type": "string",
                    "example": "<sidebar-navitem route=\"/route2\"/>"
                },
                {
                    "name": "label",
                    "description": "Specify the label of a nav item",
                    "required": "true",
                    "mappedInputAttribute": "label",
                    "requiredIfAttributeNotPresent": "icon",
                    "type": "string",
                    "example": "<sidebar-navitem label=\"Example\"/>"
                },
                {
                    "name": "icon",
                    "description": "Specify the icon of a nav item",
                    "required": "true",
                    "mappedInputAttribute": "icon",
                    "requiredIfAttributeNotPresent": "label",
                    "type": "string",
                    "example": "<sidebar-navitem icon=\"bi bi-plus\"/>"
                },
                {
                    "name": "sub-items",
                    "description": "Specify the sub items of a nav item",
                    "required": false,
                    "mappedInputAttribute": "subItems",
                    "objectbinding": true,
                    "type": "object",
                    "example": "<sidebar-navitem sub-items=\"appCtrl.subItems\"/>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<sidebar-navitem background=\"none\" id=\"xhdy78\"></sidebar-navitem>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<sidebar-navitem background-color=\"#000\" id=\"xhdy78\"></sidebar-navitem>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<sidebar-navitem overflow=\"hidden\" id=\"xhdy78\"></sidebar-navitem>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<sidebar-navitemdisplay-condition=\"true\" id=\"xhdy78\"></sidebar-navitem>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<sidebar-navitem background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></sidebar-navitem>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<sidebar-navitem background-position=\"center\" id=\"xhdy78\"></sidebar-navitem>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<sidebar-navitem background-size=\"cover\" id=\"xhdy78\"></sidebar-navitem>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<sidebar-navitem background-repeat=\"no-repeat\" id=\"xhdy78\"></sidebar-navitem>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem border=\"medium\" id=\"sdj32\"></sidebar-navitem>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem border-start=\"small\" id=\"bgt54\"></sidebar-navitem>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem border-end=\"thick\" id=\"rty76\"></sidebar-navitem>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem border-top=\"large\" id=\"zxc32\"></sidebar-navitem>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem border-bottom=\"medium\" id=\"nhy87\"></sidebar-navitem>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<sidebar-navitem border-color=\"#333\" id=\"plm98\"></sidebar-navitem>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem padding=\"medium\" id=\"jkl23\"></sidebar-navitem>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem padding-start=\"thick\" id=\"qwe76\"></sidebar-navitem>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem padding-top=\"large\" id=\"mnb45\"></sidebar-navitem>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem padding-end=\"medium\" id=\"mki98\"></sidebar-navitem>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem padding-bottom=\"compact\" id=\"yhn87\"></sidebar-navitem>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem margin=\"medium\" id=\"vfr54\"></sidebar-navitem>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem margin-start=\"slim\" id=\"azx32\"></sidebar-navitem>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem margin-top=\"slim\" id=\"azx32\"></sidebar-navitem>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem margin-end=\"thicker\" id=\"qwe98\"></sidebar-navitem>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-navitem margin-bottom=\"medium\" id=\"poi76\"></sidebar-navitem>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<sidebar-navitem css-class=\"my-custom-class\" id=\"dfg43\"></sidebar-navitem>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<sidebar-navitem height=\"medium\" id=\"sj889\"></sidebar-navitem>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<sidebar-navitem width=\"compact\" id=\"whd87\"></sidebar-navitem>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<sidebar-navitem transition=\"fade\" id=\"rfh45\"></sidebar-navitem>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<sidebar-navitem transition-duration=\"define-500ms\" id=\"tyu76\"></sidebar-navitem>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<sidebar-navitem on-click=\"handleClick\" id=\"jkv54\"></sidebar-navitem>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<sidebar-navitem on-click-args=\"['event']\" id=\"mnv32\"></sidebar-navitem>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<sidebar-navitem hidden=\"true\" id=\"plk98\"></sidebar-navitem>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<sidebar-navitem hidden=\"true\" id=\"plk98\"></sidebar-navitem>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<sidebar-navitem hidden=\"true\" id=\"plk98\"></sidebar-navitem>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<sidebar-navitem tootip=\"abc\" id=\"plk98\"></sidebar-navitem>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<sidebar-navitem tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></sidebar-navitem>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<sidebar-navitem tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></sidebar-navitem>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<sidebar-navitem hidden=\"true\" id=\"plk98\"></sidebar-navitem>"
                }
            ],
            "allowedChildren": null,
            "allowedInParent": [
                "sidebar-start",
                "sidebar-end",
                "sidebar-center"
            ],
            "declarativeComponentTag": "ng-declarative-sidebar-navitem"
        },
        {
            "tag": "sidebar-start",
            "type": "WIDGET",
            "parent": "sidebar",
            "description": "Start slot in a sidebar component.",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Specifies the layout direction of the block.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<block direction=\"row\">...</block>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "defaultValue": "display-contents",
                    "type": "string",
                    "example": "<sidebar-start  css-class=\"my-custom-class\" id=\"dfg43\"></sidebar-start>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the block should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<block manage-children=\"true\">...</block>"
                },
                {
                    "name": "children-sizes",
                    "description": "Specifies the sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<block children-sizes=\"50% 50%\">...</block>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Specifies the flex sizes of the block's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<block children-flex-sizes=\"1 2\">...</block>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the block along the cross-axis.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<block align-items=\"center\">...</block>"
                },
                {
                    "name": "justify-contents",
                    "description": "Aligns the content of the block along the main-axis.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<block justify-contents=\"space-between\">...</block>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether to skip applying flex classes to the block.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "defaultValue": "true",
                    "allowedValues": "true | false",
                    "example": "<block skip-flex=\"true\">...</block>"
                },
                {
                    "name": "slotstart",
                    "description": "Associates the block with an start-slot directive.",
                    "required": false,
                    "type": "directive",
                    "example": "<sidebar-start ></sidebar-start>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<sidebar-start background=\"none\" id=\"xhdy78\"></sidebar-start>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<sidebar-start background-color=\"#000\" id=\"xhdy78\"></sidebar-start>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<sidebar-start overflow=\"hidden\" id=\"xhdy78\"></sidebar-start>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<sidebar-startdisplay-condition=\"true\" id=\"xhdy78\"></sidebar-start>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<sidebar-start background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></sidebar-start>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<sidebar-start background-position=\"center\" id=\"xhdy78\"></sidebar-start>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<sidebar-start background-size=\"cover\" id=\"xhdy78\"></sidebar-start>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<sidebar-start background-repeat=\"no-repeat\" id=\"xhdy78\"></sidebar-start>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start border=\"medium\" id=\"sdj32\"></sidebar-start>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start border-start=\"small\" id=\"bgt54\"></sidebar-start>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start border-end=\"thick\" id=\"rty76\"></sidebar-start>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start border-top=\"large\" id=\"zxc32\"></sidebar-start>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start border-bottom=\"medium\" id=\"nhy87\"></sidebar-start>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<sidebar-start border-color=\"#333\" id=\"plm98\"></sidebar-start>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start padding=\"medium\" id=\"jkl23\"></sidebar-start>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start padding-start=\"thick\" id=\"qwe76\"></sidebar-start>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start padding-top=\"large\" id=\"mnb45\"></sidebar-start>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start padding-end=\"medium\" id=\"mki98\"></sidebar-start>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start padding-bottom=\"compact\" id=\"yhn87\"></sidebar-start>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start margin=\"medium\" id=\"vfr54\"></sidebar-start>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start margin-start=\"slim\" id=\"azx32\"></sidebar-start>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start margin-top=\"slim\" id=\"azx32\"></sidebar-start>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start margin-end=\"thicker\" id=\"qwe98\"></sidebar-start>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<sidebar-start margin-bottom=\"medium\" id=\"poi76\"></sidebar-start>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<sidebar-start css-class=\"my-custom-class\" id=\"dfg43\"></sidebar-start>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<sidebar-start height=\"medium\" id=\"sj889\"></sidebar-start>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<sidebar-start width=\"compact\" id=\"whd87\"></sidebar-start>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<sidebar-start transition=\"fade\" id=\"rfh45\"></sidebar-start>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<sidebar-start transition-duration=\"define-500ms\" id=\"tyu76\"></sidebar-start>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<sidebar-start on-click=\"handleClick\" id=\"jkv54\"></sidebar-start>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<sidebar-start on-click-args=\"['event']\" id=\"mnv32\"></sidebar-start>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<sidebar-start hidden=\"true\" id=\"plk98\"></sidebar-start>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<sidebar-start hidden=\"true\" id=\"plk98\"></sidebar-start>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<sidebar-start hidden=\"true\" id=\"plk98\"></sidebar-start>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<sidebar-start tootip=\"abc\" id=\"plk98\"></sidebar-start>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<sidebar-start tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></sidebar-start>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<sidebar-start tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></sidebar-start>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<sidebar-start hidden=\"true\" id=\"plk98\"></sidebar-start>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "allowedInParent": [
                "sidebar"
            ],
            "declarativeComponentTag": "ng-declarative-block"
        },
        {
            "tag": "slideshow",
            "type": "WIDGET",
            "description": " Displays a slideshow of images.",
            "attributes": [
                {
                    "name": "dataset",
                    "description": "Specify the dataset name; It is expected that a dataset will contains the slides metadata.",
                    "required": false,
                    "mappedInputAttribute": "datasetName",
                    "type": "string",
                    "example": "<slideshow dataset=\"datasetName\"/>"
                },
                {
                    "name": "slide-show-options",
                    "description": "Specify the configuration of a slide show.",
                    "required": true,
                    "mappedInputAttribute": "slideshowOptions",
                    "type": "object",
                    "objectbinding": true,
                    "example": "\n      AppController:\n        slideShowOptions = {\n          images: [\n            {\n\n            }\n          ],\n\n        }\n      source.xml\n        <slideshow slide-show-options=\"appCtrl.slideShowOptions\"/>\n      \n      "
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<slideshow background=\"none\" id=\"xhdy78\"></slideshow>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<slideshow background-color=\"#000\" id=\"xhdy78\"></slideshow>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<slideshow overflow=\"hidden\" id=\"xhdy78\"></slideshow>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<slideshowdisplay-condition=\"true\" id=\"xhdy78\"></slideshow>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<slideshow background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></slideshow>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<slideshow background-position=\"center\" id=\"xhdy78\"></slideshow>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<slideshow background-size=\"cover\" id=\"xhdy78\"></slideshow>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<slideshow background-repeat=\"no-repeat\" id=\"xhdy78\"></slideshow>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow border=\"medium\" id=\"sdj32\"></slideshow>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow border-start=\"small\" id=\"bgt54\"></slideshow>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow border-end=\"thick\" id=\"rty76\"></slideshow>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow border-top=\"large\" id=\"zxc32\"></slideshow>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow border-bottom=\"medium\" id=\"nhy87\"></slideshow>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<slideshow border-color=\"#333\" id=\"plm98\"></slideshow>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow padding=\"medium\" id=\"jkl23\"></slideshow>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow padding-start=\"thick\" id=\"qwe76\"></slideshow>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow padding-top=\"large\" id=\"mnb45\"></slideshow>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow padding-end=\"medium\" id=\"mki98\"></slideshow>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow padding-bottom=\"compact\" id=\"yhn87\"></slideshow>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow margin=\"medium\" id=\"vfr54\"></slideshow>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow margin-start=\"slim\" id=\"azx32\"></slideshow>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow margin-top=\"slim\" id=\"azx32\"></slideshow>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow margin-end=\"thicker\" id=\"qwe98\"></slideshow>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<slideshow margin-bottom=\"medium\" id=\"poi76\"></slideshow>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<slideshow css-class=\"my-custom-class\" id=\"dfg43\"></slideshow>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<slideshow height=\"medium\" id=\"sj889\"></slideshow>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<slideshow width=\"compact\" id=\"whd87\"></slideshow>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<slideshow transition=\"fade\" id=\"rfh45\"></slideshow>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<slideshow transition-duration=\"define-500ms\" id=\"tyu76\"></slideshow>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<slideshow on-click=\"handleClick\" id=\"jkv54\"></slideshow>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<slideshow on-click-args=\"['event']\" id=\"mnv32\"></slideshow>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<slideshow hidden=\"true\" id=\"plk98\"></slideshow>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<slideshow hidden=\"true\" id=\"plk98\"></slideshow>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<slideshow hidden=\"true\" id=\"plk98\"></slideshow>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<slideshow tootip=\"abc\" id=\"plk98\"></slideshow>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<slideshow tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></slideshow>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<slideshow tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></slideshow>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<slideshow hidden=\"true\" id=\"plk98\"></slideshow>"
                }
            ],
            "allowedChildren": null,
            "declarativeComponentTag": "ng-declarative-slideshow"
        },
        {
            "tag": "table",
            "type": "WIDGET",
            "description": "Represents tabular data.",
            "attributes": [
                {
                    "name": "dataset",
                    "description": "Specifies the name of the dataset used for populating the table.",
                    "required": true,
                    "mappedInputAttribute": "datasetName",
                    "type": "string",
                    "example": "<table dataset=\"employees\">...</table>"
                },
                {
                    "name": "table-options",
                    "description": "Provides options for configuring the table.",
                    "required": false,
                    "mappedInputAttribute": "tableOptions",
                    "type": "string",
                    "objectbinding": true,
                    "example": "<table table-options=\"{ sortable: true, filterable: false }\">...</table>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<table background=\"none\" id=\"xhdy78\"></table>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<table background-color=\"#000\" id=\"xhdy78\"></table>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<table overflow=\"hidden\" id=\"xhdy78\"></table>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<tabledisplay-condition=\"true\" id=\"xhdy78\"></table>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<table background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></table>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<table background-position=\"center\" id=\"xhdy78\"></table>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<table background-size=\"cover\" id=\"xhdy78\"></table>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<table background-repeat=\"no-repeat\" id=\"xhdy78\"></table>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table border=\"medium\" id=\"sdj32\"></table>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table border-start=\"small\" id=\"bgt54\"></table>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table border-end=\"thick\" id=\"rty76\"></table>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table border-top=\"large\" id=\"zxc32\"></table>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table border-bottom=\"medium\" id=\"nhy87\"></table>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<table border-color=\"#333\" id=\"plm98\"></table>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table padding=\"medium\" id=\"jkl23\"></table>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table padding-start=\"thick\" id=\"qwe76\"></table>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table padding-top=\"large\" id=\"mnb45\"></table>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table padding-end=\"medium\" id=\"mki98\"></table>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table padding-bottom=\"compact\" id=\"yhn87\"></table>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table margin=\"medium\" id=\"vfr54\"></table>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table margin-start=\"slim\" id=\"azx32\"></table>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table margin-top=\"slim\" id=\"azx32\"></table>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table margin-end=\"thicker\" id=\"qwe98\"></table>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<table margin-bottom=\"medium\" id=\"poi76\"></table>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<table css-class=\"my-custom-class\" id=\"dfg43\"></table>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<table height=\"medium\" id=\"sj889\"></table>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<table width=\"compact\" id=\"whd87\"></table>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<table transition=\"fade\" id=\"rfh45\"></table>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<table transition-duration=\"define-500ms\" id=\"tyu76\"></table>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<table on-click=\"handleClick\" id=\"jkv54\"></table>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<table on-click-args=\"['event']\" id=\"mnv32\"></table>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<table hidden=\"true\" id=\"plk98\"></table>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<table hidden=\"true\" id=\"plk98\"></table>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<table hidden=\"true\" id=\"plk98\"></table>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<table tootip=\"abc\" id=\"plk98\"></table>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<table tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></table>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<table tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></table>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<table hidden=\"true\" id=\"plk98\"></table>"
                }
            ],
            "allowedChildren": null,
            "declarativeComponentTag": "ng-declarative-table"
        },
        {
            "tag": "template",
            "type": "WIDGET",
            "description": "Angular template section.",
            "attributes": [],
            "allowedChildren": [
                "*"
            ],
            "declarativeComponentTag": "ng-template"
        }
    ],
    "DATA": [
        {
            "tag": "dataset",
            "type": "DATA",
            "desription": "Set of observable data that can be loaded from various source.",
            "attributes": [
                {
                    "name": "name",
                    "required": true,
                    "mappedInputAttribute": "name",
                    "type": "string"
                },
                {
                    "name": "pre-load",
                    "required": false,
                    "mappedInputAttribute": "preLoad",
                    "type": "boolean",
                    "allowedValues": "true | false"
                },
                {
                    "name": "auto-upgrade",
                    "required": false,
                    "mappedInputAttribute": " autoupgrade",
                    "type": "boolean",
                    "allowedValues": "true | false"
                },
                {
                    "name": "type",
                    "required": true,
                    "mappedInputAttribute": "type",
                    "allowedvalues": "json | url | json-file",
                    "type": "string"
                },
                {
                    "name": "src",
                    "objectbinding": true,
                    "required": true,
                    "mappedInputAttribute": "src",
                    "type": "string"
                },
                {
                    "name": "schema",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "schema",
                    "type": "string"
                },
                {
                    "name": "data-key",
                    "required": false,
                    "mappedInputAttribute": "dataKey",
                    "type": "string"
                }
            ],
            "allowedChildren": null,
            "allowedInParent": [
                "ng-declarative-app",
                "route"
            ],
            "declarativeComponentTag": "ng-declarative-dataset"
        },
        {
            "tag": "signal",
            "type": "DATA",
            "descritpion": "Angular signal to manage state of the application easily.",
            "attributes": [
                {
                    "name": "name",
                    "required": true,
                    "mappedInputAttribute": "name",
                    "type": "string"
                },
                {
                    "name": "value",
                    "required": false,
                    "mappedInputAttribute": "value",
                    "type": "string"
                },
                {
                    "name": "type",
                    "required": true,
                    "mappedInputAttribute": "value",
                    "type": "string"
                }
            ],
            "allowedChildren": null,
            "allowedInParent": [
                "ng-declarative-app"
            ],
            "declarativeComponentTag": null
        }
    ],
    "FORM": [
        {
            "tag": "form",
            "type": "FORM",
            "description": "Represents an HTML form",
            "attributes": [
                {
                    "name": "direction",
                    "description": "Sets the layout direction of the form.",
                    "required": false,
                    "mappedInputAttribute": "layoutDirection",
                    "type": "string",
                    "allowedValues": "row | column",
                    "example": "<form direction=\"column\" id=\"exampleForm\"></form>"
                },
                {
                    "name": "manage-children",
                    "description": "Determines whether the form should manage its children.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "manageChildren",
                    "type": "boolean",
                    "example": "<form manage-children=\"true\" id=\"exampleForm\"></form>"
                },
                {
                    "name": "children-sizes",
                    "description": "Sets the sizes of the form's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenSizes",
                    "type": "string",
                    "example": "<form children-sizes=\"50% 50%\" id=\"exampleForm\"></form>"
                },
                {
                    "name": "children-flex-sizes",
                    "description": "Sets the flex values of the form's children.",
                    "required": false,
                    "mappedInputAttribute": "childrenFlexValues",
                    "type": "string",
                    "example": "<form children-flex-sizes=\"1 2\" id=\"exampleForm\"></form>"
                },
                {
                    "name": "align-items",
                    "description": "Aligns the items of the form.",
                    "required": false,
                    "mappedInputAttribute": "alignItems",
                    "type": "string",
                    "defaultValue": "center",
                    "allowedValues": "start | end | center | stretch | baseline",
                    "example": "<form align-items=\"center\" id=\"exampleForm\"></form>"
                },
                {
                    "name": "justify-contents",
                    "description": "Justifies the content of the form.",
                    "required": false,
                    "mappedInputAttribute": "justifyContent",
                    "type": "string",
                    "allowedValues": "start | end | center | right | left | space-between | space-around | space-evenly",
                    "example": "<form justify-contents=\"space-between\" id=\"exampleForm\"></form>"
                },
                {
                    "name": "skip-flex",
                    "description": "Determines whether the form should skip flex classes.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "skipFlexClasses",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<form skip-flex=\"true\" id=\"exampleForm\"></form>"
                },
                {
                    "name": "action",
                    "description": "Sets the action for the form.",
                    "required": false,
                    "mappedInputAttribute": "formAction",
                    "type": "object",
                    "objectbinding": true,
                    "example": "<form action=\"appCtrl.submitForm\" id=\"exampleForm\"></form>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<form background=\"none\" id=\"xhdy78\"></form>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<form background-color=\"#000\" id=\"xhdy78\"></form>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<form overflow=\"hidden\" id=\"xhdy78\"></form>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<formdisplay-condition=\"true\" id=\"xhdy78\"></form>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<form background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></form>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<form background-position=\"center\" id=\"xhdy78\"></form>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<form background-size=\"cover\" id=\"xhdy78\"></form>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<form background-repeat=\"no-repeat\" id=\"xhdy78\"></form>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form border=\"medium\" id=\"sdj32\"></form>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form border-start=\"small\" id=\"bgt54\"></form>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form border-end=\"thick\" id=\"rty76\"></form>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form border-top=\"large\" id=\"zxc32\"></form>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form border-bottom=\"medium\" id=\"nhy87\"></form>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<form border-color=\"#333\" id=\"plm98\"></form>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form padding=\"medium\" id=\"jkl23\"></form>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form padding-start=\"thick\" id=\"qwe76\"></form>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form padding-top=\"large\" id=\"mnb45\"></form>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form padding-end=\"medium\" id=\"mki98\"></form>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form padding-bottom=\"compact\" id=\"yhn87\"></form>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form margin=\"medium\" id=\"vfr54\"></form>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form margin-start=\"slim\" id=\"azx32\"></form>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form margin-top=\"slim\" id=\"azx32\"></form>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form margin-end=\"thicker\" id=\"qwe98\"></form>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form margin-bottom=\"medium\" id=\"poi76\"></form>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<form css-class=\"my-custom-class\" id=\"dfg43\"></form>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<form height=\"medium\" id=\"sj889\"></form>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<form width=\"compact\" id=\"whd87\"></form>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<form transition=\"fade\" id=\"rfh45\"></form>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<form transition-duration=\"define-500ms\" id=\"tyu76\"></form>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<form on-click=\"handleClick\" id=\"jkv54\"></form>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<form on-click-args=\"['event']\" id=\"mnv32\"></form>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<form hidden=\"true\" id=\"plk98\"></form>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<form hidden=\"true\" id=\"plk98\"></form>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<form hidden=\"true\" id=\"plk98\"></form>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<form tootip=\"abc\" id=\"plk98\"></form>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<form tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></form>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<form tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></form>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<form hidden=\"true\" id=\"plk98\"></form>"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "declarativeComponentTag": "ng-declarative-form"
        },
        {
            "tag": "form-action",
            "type": "FORM",
            "description": " Represents an action within a form.",
            "attributes": [
                {
                    "name": "isSuccess",
                    "required": false,
                    "mappedInputAttribute": "isHidden",
                    "type": "boolean",
                    "objectbinding": true
                },
                {
                    "name": "isLoading",
                    "required": false,
                    "mappedInputAttribute": "isLoading",
                    "type": "boolean",
                    "objectbinding": true
                },
                {
                    "name": "isError",
                    "required": false,
                    "mappedInputAttribute": "isError",
                    "type": "boolean",
                    "objectbinding": true
                },
                {
                    "name": "theme",
                    "required": false,
                    "mappedInputAttribute": "theme",
                    "allwedValues": "'primary | secondary | success | danger | warning | info | light | dark | link | outline-primary | outline-secondary | outline-success | outline-danger | outline-warning | outline-info | outline-light | outline-dark'",
                    "type": "string"
                },
                {
                    "name": "type",
                    "required": false,
                    "mappedInputAttribute": "type",
                    "defaultValue": "submit",
                    "type": "string"
                },
                {
                    "name": "label",
                    "required": true,
                    "mappedInputAttribute": "label",
                    "type": "string"
                },
                {
                    "name": "on-submit",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<form-action background=\"none\" id=\"xhdy78\"></form-action>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<form-action background-color=\"#000\" id=\"xhdy78\"></form-action>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<form-action overflow=\"hidden\" id=\"xhdy78\"></form-action>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<form-actiondisplay-condition=\"true\" id=\"xhdy78\"></form-action>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<form-action background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></form-action>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<form-action background-position=\"center\" id=\"xhdy78\"></form-action>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<form-action background-size=\"cover\" id=\"xhdy78\"></form-action>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<form-action background-repeat=\"no-repeat\" id=\"xhdy78\"></form-action>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action border=\"medium\" id=\"sdj32\"></form-action>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action border-start=\"small\" id=\"bgt54\"></form-action>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action border-end=\"thick\" id=\"rty76\"></form-action>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action border-top=\"large\" id=\"zxc32\"></form-action>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action border-bottom=\"medium\" id=\"nhy87\"></form-action>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<form-action border-color=\"#333\" id=\"plm98\"></form-action>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action padding=\"medium\" id=\"jkl23\"></form-action>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action padding-start=\"thick\" id=\"qwe76\"></form-action>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action padding-top=\"large\" id=\"mnb45\"></form-action>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action padding-end=\"medium\" id=\"mki98\"></form-action>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action padding-bottom=\"compact\" id=\"yhn87\"></form-action>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action margin=\"medium\" id=\"vfr54\"></form-action>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action margin-start=\"slim\" id=\"azx32\"></form-action>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action margin-top=\"slim\" id=\"azx32\"></form-action>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action margin-end=\"thicker\" id=\"qwe98\"></form-action>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<form-action margin-bottom=\"medium\" id=\"poi76\"></form-action>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<form-action css-class=\"my-custom-class\" id=\"dfg43\"></form-action>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<form-action height=\"medium\" id=\"sj889\"></form-action>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<form-action width=\"compact\" id=\"whd87\"></form-action>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<form-action transition=\"fade\" id=\"rfh45\"></form-action>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<form-action transition-duration=\"define-500ms\" id=\"tyu76\"></form-action>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<form-action on-click=\"handleClick\" id=\"jkv54\"></form-action>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<form-action on-click-args=\"['event']\" id=\"mnv32\"></form-action>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<form-action hidden=\"true\" id=\"plk98\"></form-action>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<form-action hidden=\"true\" id=\"plk98\"></form-action>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<form-action hidden=\"true\" id=\"plk98\"></form-action>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<form-action tootip=\"abc\" id=\"plk98\"></form-action>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<form-action tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></form-action>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<form-action tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></form-action>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<form-action hidden=\"true\" id=\"plk98\"></form-action>"
                }
            ],
            "allowedChildren": null,
            "declarativeComponentTag": "ng-declarative-button"
        },
        {
            "tag": "input",
            "type": "FORM",
            "description": "A configurable input component.",
            "attributes": [
                {
                    "name": "theme",
                    "description": "Sets the theme for the input.",
                    "required": true,
                    "mappedInputAttribute": "theme",
                    "type": "string",
                    "example": "<input theme=\"default\" id=\"exampleInput\">"
                },
                {
                    "name": "font-size",
                    "description": "Sets the font size of the input.",
                    "required": false,
                    "mappedInputAttribute": "fontSize",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input font-size=\"medium\" id=\"exampleInput\">"
                },
                {
                    "name": "text-color",
                    "description": "Sets the text color of the input.",
                    "required": false,
                    "mappedInputAttribute": "color",
                    "type": "string",
                    "example": "<input text-color=\"#333\" id=\"exampleInput\">"
                },
                {
                    "name": "font-weight",
                    "description": "Sets the font weight of the input.",
                    "required": false,
                    "mappedInputAttribute": "fontWeight",
                    "type": "string",
                    "allowedValues": "thin | extra-light | light | normal | medium | semi-bold | bold | extra-bold | heavy",
                    "example": "<input font-weight=\"bold\" id=\"exampleInput\">"
                },
                {
                    "name": "label",
                    "description": "Sets the label for the input.",
                    "required": false,
                    "mappedInputAttribute": "label",
                    "type": "string",
                    "example": "<input label=\"Username\" id=\"exampleInput\">"
                },
                {
                    "name": "placeholder",
                    "description": "Sets the placeholder text for the input.",
                    "required": false,
                    "mappedInputAttribute": "placeholder",
                    "type": "string",
                    "example": "<input placeholder=\"Enter your name\" id=\"exampleInput\">"
                },
                {
                    "name": "help",
                    "description": "Provides additional help text for the input.",
                    "required": false,
                    "mappedInputAttribute": "help",
                    "type": "string",
                    "example": "<input help=\"This field is required\" id=\"exampleInput\">"
                },
                {
                    "name": "input-class",
                    "description": "Sets custom CSS classes for the input.",
                    "required": false,
                    "mappedInputAttribute": "inputClass",
                    "type": "string",
                    "example": "<input input-class=\"custom-input\" id=\"exampleInput\">"
                },
                {
                    "name": "label-css-class",
                    "description": "Sets custom CSS classes for the input label.",
                    "required": false,
                    "mappedInputAttribute": "labelCssClass",
                    "type": "string",
                    "example": "<input label-css-class=\"custom-label\" id=\"exampleInput\">"
                },
                {
                    "name": "prepend-text",
                    "description": "Adds text to the beginning of the input.",
                    "required": false,
                    "mappedInputAttribute": "prependText",
                    "type": "string",
                    "example": "<input prepend-text=\"$\" id=\"exampleInput\">"
                },
                {
                    "name": "prepend-icon-class",
                    "description": "Adds icon to the beginning of the input.",
                    "required": false,
                    "mappedInputAttribute": "prependIcon",
                    "type": "string",
                    "example": "<input prepend-icon-class=\"bi bi-arrow-down\" id=\"exampleInput\">"
                },
                {
                    "name": "model",
                    "description": "Binds the input value to a model.",
                    "required": "true",
                    "mappedInputAttribute": "inputModel",
                    "type": "string",
                    "twowaybinding": "true",
                    "requiredIfAttributeNotPresent": "dataset,signal",
                    "example": "<input model=\"userName\" id=\"exampleInput\">"
                },
                {
                    "name": "signal",
                    "description": "Binds the signal to the input.",
                    "required": "true",
                    "mappedInputAttribute": "signal",
                    "type": "object",
                    "objectbinding": "true",
                    "requiredIfAttributeNotPresent": "dataset,model",
                    "example": "<input signal=\"userName\" id=\"exampleInput\">"
                },
                {
                    "name": "dataset",
                    "description": "Binds the input value to a dataset.",
                    "required": "true",
                    "mappedInputAttribute": "dataset",
                    "type": "string",
                    "requiredIfAttributeNotPresent": "model,signal",
                    "example": "<input dataset=\"userData\" id=\"exampleInput\">"
                },
                {
                    "name": "attribute-name",
                    "description": "Specifies the attribute name when using a model.",
                    "required": false,
                    "mappedInputAttribute": "attributeName",
                    "type": "string",
                    "requiredIfAttributePresent": [
                        "model",
                        "signal"
                    ],
                    "example": "<input attribute-name=\"username\" [model]=\"userName\" id=\"exampleInput\">"
                },
                {
                    "name": "dataset-key",
                    "description": "Specifies the key in the dataset when using a dataset.",
                    "required": false,
                    "mappedInputAttribute": "datasetKey",
                    "type": "string",
                    "example": "<input dataset-key=\"name\" [dataset]=\"userData\" id=\"exampleInput\">"
                },
                {
                    "name": "dataset-attribute",
                    "description": "Specifies the attribute in the dataset when using a dataset.",
                    "required": false,
                    "mappedInputAttribute": "datasetattribute",
                    "type": "string",
                    "requiredIfAttributePresent": "dataset",
                    "example": "<input dataset-attribute=\"username\" [dataset]=\"userData\" id=\"exampleInput\">"
                },
                {
                    "name": "required",
                    "description": "Specifies if the input is required.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "required",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<input required=\"true\" id=\"exampleInput\">"
                },
                {
                    "name": "disable-border",
                    "description": "Disables the input border.",
                    "required": false,
                    "objectbinding": true,
                    "mappedInputAttribute": "disableInputBorder",
                    "type": "boolean",
                    "allowedValues": "true | false",
                    "example": "<input disable-border=\"true\" id=\"exampleInput\">"
                },
                {
                    "name": "validators",
                    "description": "Specifies predefined validations for the input.",
                    "required": false,
                    "mappedInputAttribute": "predefinedValidations",
                    "type": "string",
                    "example": "<input validators=\"email\" id=\"exampleInput\">"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<input background=\"none\" id=\"xhdy78\"></input>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<input background-color=\"#000\" id=\"xhdy78\"></input>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<input overflow=\"hidden\" id=\"xhdy78\"></input>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<inputdisplay-condition=\"true\" id=\"xhdy78\"></input>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<input background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></input>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<input background-position=\"center\" id=\"xhdy78\"></input>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<input background-size=\"cover\" id=\"xhdy78\"></input>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<input background-repeat=\"no-repeat\" id=\"xhdy78\"></input>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input border=\"medium\" id=\"sdj32\"></input>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input border-start=\"small\" id=\"bgt54\"></input>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input border-end=\"thick\" id=\"rty76\"></input>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input border-top=\"large\" id=\"zxc32\"></input>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input border-bottom=\"medium\" id=\"nhy87\"></input>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<input border-color=\"#333\" id=\"plm98\"></input>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input padding=\"medium\" id=\"jkl23\"></input>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input padding-start=\"thick\" id=\"qwe76\"></input>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input padding-top=\"large\" id=\"mnb45\"></input>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input padding-end=\"medium\" id=\"mki98\"></input>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input padding-bottom=\"compact\" id=\"yhn87\"></input>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input margin=\"medium\" id=\"vfr54\"></input>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input margin-start=\"slim\" id=\"azx32\"></input>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input margin-top=\"slim\" id=\"azx32\"></input>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input margin-end=\"thicker\" id=\"qwe98\"></input>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<input margin-bottom=\"medium\" id=\"poi76\"></input>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<input css-class=\"my-custom-class\" id=\"dfg43\"></input>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<input height=\"medium\" id=\"sj889\"></input>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<input width=\"compact\" id=\"whd87\"></input>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<input transition=\"fade\" id=\"rfh45\"></input>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<input transition-duration=\"define-500ms\" id=\"tyu76\"></input>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<input on-click=\"handleClick\" id=\"jkv54\"></input>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<input on-click-args=\"['event']\" id=\"mnv32\"></input>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<input hidden=\"true\" id=\"plk98\"></input>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<input hidden=\"true\" id=\"plk98\"></input>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<input hidden=\"true\" id=\"plk98\"></input>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<input tootip=\"abc\" id=\"plk98\"></input>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<input tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></input>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<input tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></input>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<input hidden=\"true\" id=\"plk98\"></input>"
                }
            ],
            "allowedChildren": null,
            "declarativeComponentTag": "ng-declarative-input"
        }
    ],
    "OTHER": [
        {
            "tag": "image",
            "type": "OTHER",
            "description": "Configurable image component that can load image as well as icons using css classes.",
            "attributes": [
                {
                    "name": "src",
                    "description": "Specify the source of an Image Component",
                    "required": false,
                    "mappedInputAttribute": "imageUrl",
                    "type": "string",
                    "requiredIf": "type==image",
                    "example": "<image src=\"path/to/image\"/>"
                },
                {
                    "name": "icon",
                    "description": "Specify the icon css class for an Image Component",
                    "required": false,
                    "mappedInputAttribute": "iconClass",
                    "requiredIf": "type==icon",
                    "type": "string",
                    "example": "<image icon=\"bi bi-arrow-down\"/>"
                },
                {
                    "name": "type",
                    "description": "Specify the source of an Image Component",
                    "required": true,
                    "mappedInputAttribute": "type",
                    "allowedValues": "image | icon",
                    "type": "string",
                    "example": "<image type=\"icon\"/>"
                },
                {
                    "name": "alt-text",
                    "description": "Specify the alt text of an Image Component",
                    "required": false,
                    "mappedInputAttribute": "altText",
                    "type": "string",
                    "example": "<image alt-text=\"Example\"/>"
                },
                {
                    "name": "responsive",
                    "description": "If true make an Image Component responsive.",
                    "required": false,
                    "mappedInputAttribute": "isResponsive",
                    "type": "boolean",
                    "objectbinding": true,
                    "allowedValues": "true | false",
                    "example": "<image responsive=\"true\"/>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<image background=\"none\" id=\"xhdy78\"></image>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<image background-color=\"#000\" id=\"xhdy78\"></image>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<image overflow=\"hidden\" id=\"xhdy78\"></image>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<imagedisplay-condition=\"true\" id=\"xhdy78\"></image>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<image background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></image>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<image background-position=\"center\" id=\"xhdy78\"></image>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<image background-size=\"cover\" id=\"xhdy78\"></image>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<image background-repeat=\"no-repeat\" id=\"xhdy78\"></image>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image border=\"medium\" id=\"sdj32\"></image>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image border-start=\"small\" id=\"bgt54\"></image>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image border-end=\"thick\" id=\"rty76\"></image>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image border-top=\"large\" id=\"zxc32\"></image>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image border-bottom=\"medium\" id=\"nhy87\"></image>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<image border-color=\"#333\" id=\"plm98\"></image>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image padding=\"medium\" id=\"jkl23\"></image>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image padding-start=\"thick\" id=\"qwe76\"></image>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image padding-top=\"large\" id=\"mnb45\"></image>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image padding-end=\"medium\" id=\"mki98\"></image>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image padding-bottom=\"compact\" id=\"yhn87\"></image>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image margin=\"medium\" id=\"vfr54\"></image>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image margin-start=\"slim\" id=\"azx32\"></image>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image margin-top=\"slim\" id=\"azx32\"></image>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image margin-end=\"thicker\" id=\"qwe98\"></image>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<image margin-bottom=\"medium\" id=\"poi76\"></image>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<image css-class=\"my-custom-class\" id=\"dfg43\"></image>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<image height=\"medium\" id=\"sj889\"></image>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<image width=\"compact\" id=\"whd87\"></image>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<image transition=\"fade\" id=\"rfh45\"></image>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<image transition-duration=\"define-500ms\" id=\"tyu76\"></image>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<image on-click=\"handleClick\" id=\"jkv54\"></image>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<image on-click-args=\"['event']\" id=\"mnv32\"></image>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<image hidden=\"true\" id=\"plk98\"></image>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<image hidden=\"true\" id=\"plk98\"></image>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<image hidden=\"true\" id=\"plk98\"></image>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<image tootip=\"abc\" id=\"plk98\"></image>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<image tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></image>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<image tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></image>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<image hidden=\"true\" id=\"plk98\"></image>"
                }
            ],
            "allowedChildren": null,
            "declarativeComponentTag": "ng-declarative-image"
        },
        {
            "tag": "link",
            "type": "OTHER",
            "description": "Creates hyperlinks.",
            "attributes": [
                {
                    "name": "label",
                    "description": "Specifies the text content of the link.",
                    "required": true,
                    "mappedInputAttribute": "label",
                    "type": "string",
                    "example": "<link label=\"Home\">Home</link>"
                },
                {
                    "name": "font-weight",
                    "description": "Sets the font weight of the link.",
                    "required": false,
                    "mappedInputAttribute": "fontWeight",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link font-weight=\"bold\">Bold Link</link>"
                },
                {
                    "name": "font-size",
                    "description": "Sets the font size of the link.",
                    "required": false,
                    "mappedInputAttribute": "fontSize",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link font-size=\"medium\">Medium-sized Link</link>"
                },
                {
                    "name": "text-color",
                    "description": "Sets the text color of the link.",
                    "required": false,
                    "mappedInputAttribute": "color",
                    "type": "string",
                    "example": "<link text-color=\"#007bff\">Colored Link</link>"
                },
                {
                    "name": "route",
                    "description": "Defines the route link for the link component.",
                    "required": "true",
                    "mappedInputAttribute": "routerLinkObject",
                    "objectbinding": true,
                    "type": "string",
                    "requiredIfAttributeNotPresent": "url",
                    "example": "<link route=\"home\">Home</link>"
                },
                {
                    "name": "url",
                    "description": "Specifies the URL for the link component.",
                    "required": "true",
                    "mappedInputAttribute": "href",
                    "type": "string",
                    "requiredIfAttributeNotPresent": "route",
                    "example": "<link url=\"/home\">Home</link>"
                },
                {
                    "name": "window",
                    "description": "Specifies the target window or frame for the link.",
                    "required": false,
                    "mappedInputAttribute": "target",
                    "type": "string",
                    "example": "<link window=\"_blank\">Open in New Window</link>"
                },
                {
                    "name": "theme",
                    "description": "Sets the theme for the link.",
                    "required": false,
                    "mappedInputAttribute": "theme",
                    "type": "string",
                    "example": "<link theme=\"default\">Default Link</link>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<link background=\"none\" id=\"xhdy78\"></link>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<link background-color=\"#000\" id=\"xhdy78\"></link>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<link overflow=\"hidden\" id=\"xhdy78\"></link>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<linkdisplay-condition=\"true\" id=\"xhdy78\"></link>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<link background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></link>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<link background-position=\"center\" id=\"xhdy78\"></link>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<link background-size=\"cover\" id=\"xhdy78\"></link>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<link background-repeat=\"no-repeat\" id=\"xhdy78\"></link>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link border=\"medium\" id=\"sdj32\"></link>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link border-start=\"small\" id=\"bgt54\"></link>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link border-end=\"thick\" id=\"rty76\"></link>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link border-top=\"large\" id=\"zxc32\"></link>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link border-bottom=\"medium\" id=\"nhy87\"></link>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<link border-color=\"#333\" id=\"plm98\"></link>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link padding=\"medium\" id=\"jkl23\"></link>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link padding-start=\"thick\" id=\"qwe76\"></link>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link padding-top=\"large\" id=\"mnb45\"></link>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link padding-end=\"medium\" id=\"mki98\"></link>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link padding-bottom=\"compact\" id=\"yhn87\"></link>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link margin=\"medium\" id=\"vfr54\"></link>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link margin-start=\"slim\" id=\"azx32\"></link>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link margin-top=\"slim\" id=\"azx32\"></link>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link margin-end=\"thicker\" id=\"qwe98\"></link>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<link margin-bottom=\"medium\" id=\"poi76\"></link>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<link css-class=\"my-custom-class\" id=\"dfg43\"></link>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<link height=\"medium\" id=\"sj889\"></link>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<link width=\"compact\" id=\"whd87\"></link>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<link transition=\"fade\" id=\"rfh45\"></link>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<link transition-duration=\"define-500ms\" id=\"tyu76\"></link>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<link on-click=\"handleClick\" id=\"jkv54\"></link>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<link on-click-args=\"['event']\" id=\"mnv32\"></link>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<link hidden=\"true\" id=\"plk98\"></link>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<link hidden=\"true\" id=\"plk98\"></link>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<link hidden=\"true\" id=\"plk98\"></link>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<link tootip=\"abc\" id=\"plk98\"></link>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<link tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></link>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<link tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></link>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<link hidden=\"true\" id=\"plk98\"></link>"
                }
            ],
            "allowedChildren": [
                "label"
            ],
            "declarativeComponentTag": "ng-declarative-link"
        },
        {
            "tag": "loop",
            "type": "OTHER",
            "description": " A utility component for iterating over a collection.",
            "attributes": [
                {
                    "name": "dataset",
                    "required": "true",
                    "skipdomprocessing": true,
                    "requiredIfAttributeNotPresent": "items,inner-loop-items",
                    "type": "string"
                },
                {
                    "name": "loop-loading-class",
                    "required": false,
                    "skipdomprocessing": true,
                    "type": "string"
                },
                {
                    "name": "items",
                    "required": "true",
                    "skipdomprocessing": true,
                    "requiredIfAttributeNotPresent": "dataset,inner-loop-items",
                    "type": "string"
                },
                {
                    "name": "inner-loop",
                    "required": false,
                    "skipdomprocessing": true,
                    "allowedvalues": "true | false",
                    "type": "boolean"
                },
                {
                    "name": "inner-loop-items",
                    "required": false,
                    "requiredIf": "inner-loop==true",
                    "mappedInputAttribute": "innerLoopItems",
                    "type": "string"
                },
                {
                    "name": "outer-loop-item",
                    "required": false,
                    "mappedInputAttribute": "outerLoopItem",
                    "type": "string"
                },
                {
                    "name": "outer-loop-index",
                    "required": false,
                    "mappedInputAttribute": "outerLoopIndex",
                    "type": "string"
                },
                {
                    "name": "variable-name",
                    "required": false,
                    "skipdomprocessing": true,
                    "type": "string"
                },
                {
                    "name": "track-variable",
                    "required": false,
                    "skipdomprocessing": true,
                    "type": "string"
                }
            ],
            "allowedChildren": [
                "*"
            ],
            "declarativeComponentTag": "ng-declarative-loop"
        }
    ],
    "TEXT": [
        {
            "tag": "label",
            "type": "TEXT",
            "description": "Provides a label for user interface elements.",
            "attributes": [
                {
                    "name": "attach-with",
                    "description": "Associates the label with a specific input element using its ID.",
                    "required": false,
                    "mappedInputAttribute": "for",
                    "type": "string",
                    "example": "<label attach-with=\"exampleInput\">Username</label>"
                },
                {
                    "name": "theme",
                    "description": "Sets the theme for the label.",
                    "required": false,
                    "mappedInputAttribute": "theme",
                    "type": "string",
                    "example": "<label theme=\"default\">Default Label</label>"
                },
                {
                    "name": "callout-text",
                    "description": "Specifies additional text for callout-themed labels.",
                    "required": false,
                    "mappedInputAttribute": "calloutDesc",
                    "type": "string",
                    "requiredIf": "theme==callout",
                    "example": "<label theme=\"callout\" callout-text=\"Additional information\">Callout Label</label>"
                },
                {
                    "name": "font-size",
                    "description": "Sets the font size of the label.",
                    "required": false,
                    "mappedInputAttribute": "fontSize",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label font-size=\"medium\">Medium-sized Label</label>"
                },
                {
                    "name": "text-color",
                    "description": "Sets the text color of the label.",
                    "required": false,
                    "mappedInputAttribute": "color",
                    "type": "string",
                    "example": "<label text-color=\"#333\">Colored Label</label>"
                },
                {
                    "name": "font-weight",
                    "description": "Sets the font weight of the label.",
                    "required": false,
                    "mappedInputAttribute": "fontWeight",
                    "type": "string",
                    "allowedValues": "thin | extra-light | light | normal | medium | semi-bold | bold | extra-bold | heavy",
                    "example": "<label font-weight=\"bold\">Bold Label</label>"
                },
                {
                    "name": "text",
                    "description": "Specifies the text content of the label.",
                    "required": true,
                    "mappedInputAttribute": "text",
                    "type": "string",
                    "example": "<label text=\"Username\">Username</label>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<label background=\"none\" id=\"xhdy78\"></label>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<label background-color=\"#000\" id=\"xhdy78\"></label>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<label overflow=\"hidden\" id=\"xhdy78\"></label>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<labeldisplay-condition=\"true\" id=\"xhdy78\"></label>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<label background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></label>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<label background-position=\"center\" id=\"xhdy78\"></label>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<label background-size=\"cover\" id=\"xhdy78\"></label>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<label background-repeat=\"no-repeat\" id=\"xhdy78\"></label>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label border=\"medium\" id=\"sdj32\"></label>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label border-start=\"small\" id=\"bgt54\"></label>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label border-end=\"thick\" id=\"rty76\"></label>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label border-top=\"large\" id=\"zxc32\"></label>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label border-bottom=\"medium\" id=\"nhy87\"></label>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<label border-color=\"#333\" id=\"plm98\"></label>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label padding=\"medium\" id=\"jkl23\"></label>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label padding-start=\"thick\" id=\"qwe76\"></label>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label padding-top=\"large\" id=\"mnb45\"></label>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label padding-end=\"medium\" id=\"mki98\"></label>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label padding-bottom=\"compact\" id=\"yhn87\"></label>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label margin=\"medium\" id=\"vfr54\"></label>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label margin-start=\"slim\" id=\"azx32\"></label>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label margin-top=\"slim\" id=\"azx32\"></label>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label margin-end=\"thicker\" id=\"qwe98\"></label>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<label margin-bottom=\"medium\" id=\"poi76\"></label>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<label css-class=\"my-custom-class\" id=\"dfg43\"></label>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<label height=\"medium\" id=\"sj889\"></label>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<label width=\"compact\" id=\"whd87\"></label>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<label transition=\"fade\" id=\"rfh45\"></label>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<label transition-duration=\"define-500ms\" id=\"tyu76\"></label>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<label on-click=\"handleClick\" id=\"jkv54\"></label>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<label on-click-args=\"['event']\" id=\"mnv32\"></label>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<label hidden=\"true\" id=\"plk98\"></label>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<label hidden=\"true\" id=\"plk98\"></label>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<label hidden=\"true\" id=\"plk98\"></label>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<label tootip=\"abc\" id=\"plk98\"></label>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<label tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></label>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<label tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></label>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<label hidden=\"true\" id=\"plk98\"></label>"
                }
            ],
            "allowedChildren": [
                "image"
            ],
            "declarativeComponentTag": "ng-declarative-label"
        },
        {
            "tag": "paragraph",
            "type": "TEXT",
            "description": "Represents a paragraph of text.",
            "attributes": [
                {
                    "name": "font-size",
                    "description": "Sets the font size of the paragraph text.",
                    "required": false,
                    "mappedInputAttribute": "fontSize",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph font-size=\"medium\">This is a medium-sized paragraph.</paragraph>"
                },
                {
                    "name": "text-color",
                    "description": "Sets the text color of the paragraph.",
                    "required": false,
                    "mappedInputAttribute": "color",
                    "type": "string",
                    "example": "<paragraph text-color=\"#333\">This paragraph has a custom text color.</paragraph>"
                },
                {
                    "name": "font-weight",
                    "description": "Sets the font weight of the paragraph text.",
                    "required": false,
                    "mappedInputAttribute": "fontWeight",
                    "type": "string",
                    "allowedValues": "thin | extra-light | light | normal | medium | semi-bold | bold | extra-bold | heavy",
                    "example": "<paragraph font-weight=\"bold\">This is a bold paragraph.</paragraph>"
                },
                {
                    "name": "text",
                    "description": "Specifies the content of the paragraph.",
                    "required": "true",
                    "mappedInputAttribute": "text",
                    "requiredIfAttributeNotPresent": "template",
                    "type": "string",
                    "example": "<paragraph text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\">Lorem ipsum...</paragraph>"
                },
                {
                    "name": "template",
                    "description": "Specifies the inner html of the paragraph.",
                    "required": "true",
                    "requiredIfAttributeNotPresent": "text",
                    "mappedInputAttribute": "template",
                    "type": "string",
                    "example": "<paragraph template=\"<b>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</b>\">Lorem ipsum...</paragraph>"
                },
                {
                    "name": "background",
                    "description": "Sets background  to a component",
                    "required": false,
                    "mappedInputAttribute": "background",
                    "type": "string",
                    "example": "<paragraph background=\"none\" id=\"xhdy78\"></paragraph>"
                },
                {
                    "name": "background-color",
                    "description": "Sets background color to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundColor",
                    "type": "string",
                    "example": "<paragraph background-color=\"#000\" id=\"xhdy78\"></paragraph>"
                },
                {
                    "name": "overflow",
                    "description": "Sets overflow to a component",
                    "required": false,
                    "mappedInputAttribute": "overflow",
                    "type": "string",
                    "example": "<paragraph overflow=\"hidden\" id=\"xhdy78\"></paragraph>"
                },
                {
                    "name": "display-condition",
                    "description": "Sets display condition to a component",
                    "required": false,
                    "mappedInputAttribute": "*ngIf",
                    "type": "condition",
                    "example": "<paragraphdisplay-condition=\"true\" id=\"xhdy78\"></paragraph>"
                },
                {
                    "name": "background-image",
                    "description": "Sets background image to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundImage",
                    "type": "string",
                    "example": "<paragraph background-image=\"url('path/to/image.extension')\" id=\"xhdy78\"></paragraph>"
                },
                {
                    "name": "background-position",
                    "description": "Sets background position to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundPosition",
                    "type": "string",
                    "example": "<paragraph background-position=\"center\" id=\"xhdy78\"></paragraph>"
                },
                {
                    "name": "background-size",
                    "description": "Sets background size to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundSize",
                    "type": "string",
                    "example": "<paragraph background-size=\"cover\" id=\"xhdy78\"></paragraph>"
                },
                {
                    "name": "background-repeat",
                    "description": "Sets background repeat to a component",
                    "required": false,
                    "mappedInputAttribute": "backgroundRepeat",
                    "type": "string",
                    "example": "<paragraph background-repeat=\"no-repeat\" id=\"xhdy78\"></paragraph>"
                },
                {
                    "name": "border",
                    "description": "Sets border to a component",
                    "required": false,
                    "mappedInputAttribute": "border",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph border=\"medium\" id=\"sdj32\"></paragraph>"
                },
                {
                    "name": "border-start",
                    "description": "Sets border start to a component",
                    "required": false,
                    "mappedInputAttribute": "borderStart",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph border-start=\"small\" id=\"bgt54\"></paragraph>"
                },
                {
                    "name": "border-end",
                    "description": "Sets border end to a component",
                    "required": false,
                    "mappedInputAttribute": "borderEnd",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph border-end=\"thick\" id=\"rty76\"></paragraph>"
                },
                {
                    "name": "border-top",
                    "description": "Sets border top to a component",
                    "required": false,
                    "mappedInputAttribute": "borderTop",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph border-top=\"large\" id=\"zxc32\"></paragraph>"
                },
                {
                    "name": "border-bottom",
                    "description": "Sets border bottom to a component",
                    "required": false,
                    "mappedInputAttribute": "borderBottom",
                    "type": "string",
                    "allowedValues": "none | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph border-bottom=\"medium\" id=\"nhy87\"></paragraph>"
                },
                {
                    "name": "border-color",
                    "required": false,
                    "mappedInputAttribute": "borderColor",
                    "type": "string",
                    "example": "<paragraph border-color=\"#333\" id=\"plm98\"></paragraph>"
                },
                {
                    "name": "padding",
                    "required": false,
                    "mappedInputAttribute": "padding",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph padding=\"medium\" id=\"jkl23\"></paragraph>"
                },
                {
                    "name": "padding-start",
                    "required": false,
                    "mappedInputAttribute": "paddingStart",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph padding-start=\"thick\" id=\"qwe76\"></paragraph>"
                },
                {
                    "name": "padding-top",
                    "required": false,
                    "mappedInputAttribute": "paddingTop",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph padding-top=\"large\" id=\"mnb45\"></paragraph>"
                },
                {
                    "name": "padding-end",
                    "required": false,
                    "mappedInputAttribute": "paddingEnd",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph padding-end=\"medium\" id=\"mki98\"></paragraph>"
                },
                {
                    "name": "padding-bottom",
                    "required": false,
                    "mappedInputAttribute": "paddingBottom",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph padding-bottom=\"compact\" id=\"yhn87\"></paragraph>"
                },
                {
                    "name": "margin",
                    "required": false,
                    "mappedInputAttribute": "margin",
                    "type": "string",
                    "allowedValues": "none | auto | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph margin=\"medium\" id=\"vfr54\"></paragraph>"
                },
                {
                    "name": "margin-start",
                    "required": false,
                    "mappedInputAttribute": "marginStart",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph margin-start=\"slim\" id=\"azx32\"></paragraph>"
                },
                {
                    "name": "margin-top",
                    "required": false,
                    "mappedInputAttribute": "marginTop",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph margin-top=\"slim\" id=\"azx32\"></paragraph>"
                },
                {
                    "name": "margin-end",
                    "required": false,
                    "mappedInputAttribute": "marginEnd",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph margin-end=\"thicker\" id=\"qwe98\"></paragraph>"
                },
                {
                    "name": "margin-bottom",
                    "required": false,
                    "mappedInputAttribute": "marginBottom",
                    "type": "string",
                    "allowedValues": "none | auto  | minimal | small | medium | large | extra-large | thick | thicker",
                    "example": "<paragraph margin-bottom=\"medium\" id=\"poi76\"></paragraph>"
                },
                {
                    "name": "css-class",
                    "required": false,
                    "mappedInputAttribute": "customClass",
                    "type": "string",
                    "example": "<paragraph css-class=\"my-custom-class\" id=\"dfg43\"></paragraph>"
                },
                {
                    "name": "height",
                    "required": false,
                    "mappedInputAttribute": "height",
                    "type": "string",
                    "allowedValues": "auto | short | small | compact | mid | medium | tall | high | super-high | ultra-high | full",
                    "description": "Sets the height of a component",
                    "example": "<paragraph height=\"medium\" id=\"sj889\"></paragraph>"
                },
                {
                    "name": "width",
                    "required": false,
                    "mappedInputAttribute": "width",
                    "type": "string",
                    "allowedValues": "auto | slim | narrow | compact | mid | medium | wide | spacious | broad | extensive | full",
                    "description": "Sets the width of a component",
                    "example": "<paragraph width=\"compact\" id=\"whd87\"></paragraph>"
                },
                {
                    "name": "transition",
                    "required": false,
                    "mappedInputAttribute": "transition",
                    "type": "string",
                    "description": "Sets the transition effect for a component",
                    "example": "<paragraph transition=\"fade\" id=\"rfh45\"></paragraph>"
                },
                {
                    "name": "transition-duration",
                    "required": false,
                    "mappedInputAttribute": "transitionDuration",
                    "type": "string",
                    "allowedValues": "quick | short | medium | long",
                    "description": "Sets the duration of the transition effect for a component",
                    "example": "<paragraph transition-duration=\"define-500ms\" id=\"tyu76\"></paragraph>"
                },
                {
                    "name": "on-click",
                    "required": false,
                    "mappedInputAttribute": "onClickEvent",
                    "type": "object",
                    "description": "Sets the click event handler for a component",
                    "example": "<paragraph on-click=\"handleClick\" id=\"jkv54\"></paragraph>"
                },
                {
                    "name": "on-click-args",
                    "required": false,
                    "mappedInputAttribute": "onClickEventArgs",
                    "type": "object",
                    "objectbinding": true,
                    "description": "Sets the arguments for the click event handler of a component",
                    "example": "<paragraph on-click-args=\"['event']\" id=\"mnv32\"></paragraph>"
                },
                {
                    "name": "hidden",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "hidden",
                    "type": "object",
                    "description": "Sets the visibility of a component",
                    "example": "<paragraph hidden=\"true\" id=\"plk98\"></paragraph>"
                },
                {
                    "name": "disabled",
                    "objectbinding": true,
                    "required": false,
                    "mappedInputAttribute": "disabled",
                    "type": "object",
                    "description": "Sets if a component is disabled",
                    "example": "<paragraph hidden=\"true\" id=\"plk98\"></paragraph>"
                },
                {
                    "name": "is-collapsed",
                    "required": false,
                    "mappedInputAttribute": "[(ngbCollapse)]",
                    "type": "object",
                    "description": "Sets the component to be collapsable",
                    "example": "<paragraph hidden=\"true\" id=\"plk98\"></paragraph>"
                },
                {
                    "name": "tooltip",
                    "required": false,
                    "mappedInputAttribute": "ngbTooltip",
                    "type": "object",
                    "description": "Tooltip for a component",
                    "example": "<paragraph tootip=\"abc\" id=\"plk98\"></paragraph>"
                },
                {
                    "name": "tooltip-placement",
                    "required": false,
                    "mappedInputAttribute": "placement",
                    "type": "string",
                    "allowedValues": "top | end | bottom | start ",
                    "description": "Tooltip placement for a component",
                    "example": "<paragraph tootip=\"abc\" tooltip-placement=\"end\" id=\"plk98\"></paragraph>"
                },
                {
                    "name": "tooltip-container",
                    "required": false,
                    "mappedInputAttribute": "container",
                    "type": "string",
                    "description": "Tooltip placement container for a component",
                    "example": "<paragraph tootip=\"abc\" tooltip-container=\"body\" tooltip-placement=\"end\" id=\"plk98\"></paragraph>"
                },
                {
                    "name": "collapse-horizontal",
                    "required": false,
                    "mappedInputAttribute": "[horizontal]",
                    "type": "boolean",
                    "description": "Collapse direction",
                    "example": "<paragraph hidden=\"true\" id=\"plk98\"></paragraph>"
                }
            ],
            "allowedChildren": null,
            "declarativeComponentTag": "ng-declarative-paragraph"
        }
    ]
}